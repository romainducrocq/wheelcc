-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[3]: 
    AsmFunction: 
      TIdentifier: callee
      Bool: 1
      Bool: 0
      List[6]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.2
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.2
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: target
      Bool: 1
      Bool: 0
      List[41]: 
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: x.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: retval.1
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: x.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.3
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: const.3
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.3
        AsmJmpCC: 
          TIdentifier: case_0switch.0
          AsmNE: 
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: x.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.4
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: const.4
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.4
        AsmJmpCC: 
          TIdentifier: case_1switch.0
          AsmNE: 
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: x.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.5
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: const.5
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: const.5
        AsmJmpCC: 
          TIdentifier: case_2switch.0
          AsmNE: 
        AsmJmp: 
          TIdentifier: default_switch.0
        AsmLabel: 
          TIdentifier: case_0switch.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: retval.1
        AsmJmp: 
          TIdentifier: break_switch.0
        AsmLabel: 
          TIdentifier: case_1switch.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: retval.1
        AsmJmp: 
          TIdentifier: break_switch.0
        AsmCall: 
          TIdentifier: callee
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.6
        AsmLabel: 
          TIdentifier: case_2switch.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: retval.1
        AsmJmp: 
          TIdentifier: break_switch.0
        AsmLabel: 
          TIdentifier: default_switch.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.7
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.7
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.7
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmCall: 
          TIdentifier: callee
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.8
        AsmLabel: 
          TIdentifier: break_switch.0
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: retval.1
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[7]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: target
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.9
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.9
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(13):
  [callee]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [x.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [target]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 1
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [retval.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [unop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [const.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [const.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [const.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
