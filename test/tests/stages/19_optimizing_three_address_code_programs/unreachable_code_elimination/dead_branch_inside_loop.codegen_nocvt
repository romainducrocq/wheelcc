-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[3]: 
    AsmFunction: 
      TIdentifier: callee
      Bool: 1
      Bool: 0
      List[8]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmCdq: 
          LongWord: 
        AsmIdiv: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: binop.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.2
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: target
      Bool: 1
      Bool: 0
      List[28]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 105
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: result.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.1
        AsmLabel: 
          TIdentifier: for_start.1
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 100
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.3
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmJmpCC: 
          TIdentifier: break_for.0
          AsmE: 
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
        AsmJmpCC: 
          TIdentifier: if_false.2
          AsmE: 
        AsmCall: 
          TIdentifier: callee
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.4
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.4
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: result.0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmBinary: 
          AsmSub: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.1
          AsmPseudo: 
            TIdentifier: binop.5
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.5
          AsmPseudo: 
            TIdentifier: result.0
        AsmLabel: 
          TIdentifier: continue_for.0
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.1
          AsmPseudo: 
            TIdentifier: binop.6
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.6
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.6
          AsmPseudo: 
            TIdentifier: i.1
        AsmJmp: 
          TIdentifier: for_start.1
        AsmLabel: 
          TIdentifier: break_for.0
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: result.0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[16]: 
        AsmCall: 
          TIdentifier: target
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.7
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4845
            Bool: 0
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.8
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.8
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.8
          AsmPseudo: 
            TIdentifier: call.7
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.9
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.9
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.9
        AsmJmpCC: 
          TIdentifier: if_false.3
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.3
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(13):
  [callee]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [target]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [result.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [i.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
