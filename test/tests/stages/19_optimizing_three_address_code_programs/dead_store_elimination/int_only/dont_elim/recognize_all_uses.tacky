-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[7]: 
    TacFunction: 
      TIdentifier: test_jz
      Bool: 1
      List[2]: 
        TIdentifier: flag.0
        TIdentifier: arg.1
      List[11]: 
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: flag.0
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: arg.1
        TacLabel: 
          TIdentifier: if_false.0
        TacJumpIfZero: 
          TIdentifier: ternary_else.1
          TacVariable: 
            TIdentifier: arg.1
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: ternop.12
        TacJump: 
          TIdentifier: ternary_false.2
        TacLabel: 
          TIdentifier: ternary_else.1
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: ternop.12
        TacLabel: 
          TIdentifier: ternary_false.2
        TacReturn: 
          TacVariable: 
            TIdentifier: ternop.12
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: test_jnz
      Bool: 1
      List[2]: 
        TIdentifier: flag.2
        TIdentifier: arg.3
      List[12]: 
        TacJumpIfZero: 
          TIdentifier: if_false.3
          TacVariable: 
            TIdentifier: flag.2
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: arg.3
        TacLabel: 
          TIdentifier: if_false.3
        TacJumpIfNotZero: 
          TIdentifier: or_true.4
          TacVariable: 
            TIdentifier: arg.3
        TacJumpIfNotZero: 
          TIdentifier: or_true.4
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.13
        TacJump: 
          TIdentifier: or_false.5
        TacLabel: 
          TIdentifier: or_true.4
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.13
        TacLabel: 
          TIdentifier: or_false.5
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.13
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: test_binary
      Bool: 1
      List[3]: 
        TIdentifier: flag.4
        TIdentifier: arg1.5
        TIdentifier: arg2.6
      List[13]: 
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: flag.4
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.14
        TacJumpIfZero: 
          TIdentifier: if_else.6
          TacVariable: 
            TIdentifier: binop.14
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: arg1.5
        TacJump: 
          TIdentifier: if_false.7
        TacLabel: 
          TIdentifier: if_else.6
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: flag.4
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.15
        TacJumpIfZero: 
          TIdentifier: if_false.8
          TacVariable: 
            TIdentifier: binop.15
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: arg2.6
        TacLabel: 
          TIdentifier: if_false.8
        TacLabel: 
          TIdentifier: if_false.7
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: arg1.5
          TacVariable: 
            TIdentifier: arg2.6
          TacVariable: 
            TIdentifier: binop.16
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.16
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: test_unary
      Bool: 1
      List[2]: 
        TIdentifier: flag.7
        TIdentifier: arg.8
      List[6]: 
        TacJumpIfZero: 
          TIdentifier: if_false.9
          TacVariable: 
            TIdentifier: flag.7
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 5
          TacVariable: 
            TIdentifier: arg.8
        TacLabel: 
          TIdentifier: if_false.9
        TacUnary: 
          TacNegate: 
          TacVariable: 
            TIdentifier: arg.8
          TacVariable: 
            TIdentifier: unop.17
        TacReturn: 
          TacVariable: 
            TIdentifier: unop.17
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: f
      Bool: 1
      List[1]: 
        TIdentifier: arg.9
      List[3]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: arg.9
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.18
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.18
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: test_funcall
      Bool: 1
      List[2]: 
        TIdentifier: flag.10
        TIdentifier: arg.11
      List[6]: 
        TacJumpIfZero: 
          TIdentifier: if_false.10
          TacVariable: 
            TIdentifier: flag.10
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 7
          TacVariable: 
            TIdentifier: arg.11
        TacLabel: 
          TIdentifier: if_false.10
        TacFunCall: 
          TIdentifier: f
          List[1]: 
            TacVariable: 
              TIdentifier: arg.11
          TacVariable: 
            TIdentifier: call.19
        TacReturn: 
          TacVariable: 
            TIdentifier: call.19
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[59]: 
        TacFunCall: 
          TIdentifier: test_jz
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
            TacConstant: 
              CConstInt: 
                TInt: 1
          TacVariable: 
            TIdentifier: call.20
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.20
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.21
        TacJumpIfZero: 
          TIdentifier: if_false.11
          TacVariable: 
            TIdentifier: binop.21
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.11
        TacFunCall: 
          TIdentifier: test_jz
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
            TacConstant: 
              CConstInt: 
                TInt: 1
          TacVariable: 
            TIdentifier: call.22
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.22
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.23
        TacJumpIfZero: 
          TIdentifier: if_false.12
          TacVariable: 
            TIdentifier: binop.23
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.12
        TacFunCall: 
          TIdentifier: test_jnz
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
            TacConstant: 
              CConstInt: 
                TInt: 1
          TacVariable: 
            TIdentifier: call.24
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.24
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.25
        TacJumpIfZero: 
          TIdentifier: if_false.13
          TacVariable: 
            TIdentifier: binop.25
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.13
        TacFunCall: 
          TIdentifier: test_jnz
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
            TacConstant: 
              CConstInt: 
                TInt: 1
          TacVariable: 
            TIdentifier: call.26
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.26
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.27
        TacJumpIfZero: 
          TIdentifier: if_false.14
          TacVariable: 
            TIdentifier: binop.27
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 4
        TacLabel: 
          TIdentifier: if_false.14
        TacFunCall: 
          TIdentifier: test_binary
          List[3]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
            TacConstant: 
              CConstInt: 
                TInt: 8
            TacConstant: 
              CConstInt: 
                TInt: 9
          TacVariable: 
            TIdentifier: call.28
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.28
          TacConstant: 
            CConstInt: 
              TInt: 36
          TacVariable: 
            TIdentifier: binop.29
        TacJumpIfZero: 
          TIdentifier: if_false.15
          TacVariable: 
            TIdentifier: binop.29
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 5
        TacLabel: 
          TIdentifier: if_false.15
        TacFunCall: 
          TIdentifier: test_binary
          List[3]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
            TacConstant: 
              CConstInt: 
                TInt: 8
            TacConstant: 
              CConstInt: 
                TInt: 9
          TacVariable: 
            TIdentifier: call.30
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.30
          TacConstant: 
            CConstInt: 
              TInt: 24
          TacVariable: 
            TIdentifier: binop.31
        TacJumpIfZero: 
          TIdentifier: if_false.16
          TacVariable: 
            TIdentifier: binop.31
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 6
        TacLabel: 
          TIdentifier: if_false.16
        TacFunCall: 
          TIdentifier: test_binary
          List[3]: 
            TacConstant: 
              CConstInt: 
                TInt: 2
            TacConstant: 
              CConstInt: 
                TInt: 8
            TacConstant: 
              CConstInt: 
                TInt: 9
          TacVariable: 
            TIdentifier: call.32
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.32
          TacConstant: 
            CConstInt: 
              TInt: 72
          TacVariable: 
            TIdentifier: binop.33
        TacJumpIfZero: 
          TIdentifier: if_false.17
          TacVariable: 
            TIdentifier: binop.33
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 7
        TacLabel: 
          TIdentifier: if_false.17
        TacFunCall: 
          TIdentifier: test_unary
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
            TacConstant: 
              CConstInt: 
                TInt: 8
          TacVariable: 
            TIdentifier: call.34
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 8
          TacVariable: 
            TIdentifier: unop.35
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.34
          TacVariable: 
            TIdentifier: unop.35
          TacVariable: 
            TIdentifier: binop.36
        TacJumpIfZero: 
          TIdentifier: if_false.18
          TacVariable: 
            TIdentifier: binop.36
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 8
        TacLabel: 
          TIdentifier: if_false.18
        TacFunCall: 
          TIdentifier: test_unary
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
            TacConstant: 
              CConstInt: 
                TInt: 8
          TacVariable: 
            TIdentifier: call.37
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 5
          TacVariable: 
            TIdentifier: unop.38
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.37
          TacVariable: 
            TIdentifier: unop.38
          TacVariable: 
            TIdentifier: binop.39
        TacJumpIfZero: 
          TIdentifier: if_false.19
          TacVariable: 
            TIdentifier: binop.39
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 9
        TacLabel: 
          TIdentifier: if_false.19
        TacFunCall: 
          TIdentifier: test_funcall
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
            TacConstant: 
              CConstInt: 
                TInt: 5
          TacVariable: 
            TIdentifier: call.40
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.40
          TacConstant: 
            CConstInt: 
              TInt: 8
          TacVariable: 
            TIdentifier: binop.41
        TacJumpIfZero: 
          TIdentifier: if_false.20
          TacVariable: 
            TIdentifier: binop.41
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 10
        TacLabel: 
          TIdentifier: if_false.20
        TacFunCall: 
          TIdentifier: test_funcall
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
            TacConstant: 
              CConstInt: 
                TInt: 9
          TacVariable: 
            TIdentifier: call.42
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.42
          TacConstant: 
            CConstInt: 
              TInt: 10
          TacVariable: 
            TIdentifier: binop.43
        TacJumpIfZero: 
          TIdentifier: if_false.21
          TacVariable: 
            TIdentifier: binop.43
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 11
        TacLabel: 
          TIdentifier: if_false.21
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(51):
  [flag.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [test_jz]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [flag.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [test_jnz]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [flag.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg1.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg2.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [test_binary]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[3]: 
          Int: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [flag.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [test_unary]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [arg.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [f]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [flag.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [arg.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [test_funcall]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [ternop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.18]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.19]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.21]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.22]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.23]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.27]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.28]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.29]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.33]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.34]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.35]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.36]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.37]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.38]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.39]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.40]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.41]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.42]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.43]: 
    Symbol: 
      Int: 
      LocalAttr: 
