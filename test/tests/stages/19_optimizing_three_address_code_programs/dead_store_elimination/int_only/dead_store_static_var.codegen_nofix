-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[3]: 
    AsmStaticVariable: 
      TIdentifier: i
      TInt: 4
      Bool: 1
      List[1]: 
        ZeroInit: 
          TLong: 4
    AsmFunction: 
      TIdentifier: target
      Bool: 1
      Bool: 0
      List[9]: 
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: arg.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 5
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: arg.0
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: binop.3
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.3
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[48]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: target
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.4
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.4
          AsmPseudo: 
            TIdentifier: result1.1
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.5
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmJmpCC: 
          TIdentifier: if_false.0
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.0
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: result1.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.6
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.6
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.6
        AsmJmpCC: 
          TIdentifier: if_false.1
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.7
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.7
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.7
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: target
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.8
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.8
          AsmPseudo: 
            TIdentifier: result2.2
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.9
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.9
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.9
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.10
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.10
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.10
        AsmJmpCC: 
          TIdentifier: if_false.2
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.2
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: result2.2
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.11
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.11
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.11
        AsmJmpCC: 
          TIdentifier: if_false.3
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.3
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(15):
  [i]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [arg.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [target]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 1
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [result1.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [result2.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(15):
  [i]: 
    BackendObj: 
      Bool: 1
      Bool: 0
      LongWord: 
  [arg.0]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [target]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [main]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [result1.1]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [result2.2]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.3]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [call.4]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.5]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.6]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [unop.7]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [call.8]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [unop.9]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.10]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.11]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
