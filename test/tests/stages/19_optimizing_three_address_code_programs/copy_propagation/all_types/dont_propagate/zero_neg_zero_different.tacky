-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[2]: 
    TacFunction: 
      TIdentifier: target
      Bool: 1
      List[1]: 
        TIdentifier: flag.2
      List[7]: 
        TacCopy: 
          TacConstant: 
            CConstDouble: 
              TDouble: 0.000000
          TacVariable: 
            TIdentifier: result.3
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: flag.2
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstDouble: 
              TDouble: 0.000000
          TacVariable: 
            TIdentifier: unop.6
        TacCopy: 
          TacVariable: 
            TIdentifier: unop.6
          TacVariable: 
            TIdentifier: result.3
        TacLabel: 
          TIdentifier: if_false.0
        TacReturn: 
          TacVariable: 
            TIdentifier: result.3
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[11]: 
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.7
        TacFunCall: 
          TIdentifier: target
          List[1]: 
            TacConstant: 
              CConstInt: 
                TInt: 0
          TacVariable: 
            TIdentifier: call.8
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: cast.7
          TacVariable: 
            TIdentifier: call.8
          TacVariable: 
            TIdentifier: binop.9
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.9
          TacVariable: 
            TIdentifier: pos_inf.4
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.10
        TacFunCall: 
          TIdentifier: target
          List[1]: 
            TacConstant: 
              CConstInt: 
                TInt: 1
          TacVariable: 
            TIdentifier: call.11
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: cast.10
          TacVariable: 
            TIdentifier: call.11
          TacVariable: 
            TIdentifier: binop.12
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.12
          TacVariable: 
            TIdentifier: neg_inf.5
        TacBinary: 
          TacGreaterThan: 
          TacVariable: 
            TIdentifier: pos_inf.4
          TacVariable: 
            TIdentifier: neg_inf.5
          TacVariable: 
            TIdentifier: binop.13
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.13
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(15):
  [copysign]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Double: 
          Double: 
        Double: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [flag.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [target]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Double: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [result.3]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [pos_inf.4]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [neg_inf.5]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [unop.6]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [cast.7]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [cast.10]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.11]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.12]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
