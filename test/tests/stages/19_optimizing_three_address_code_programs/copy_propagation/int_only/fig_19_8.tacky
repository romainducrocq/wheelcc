-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[1]: 
    TacStaticVariable: 
      TIdentifier: called_counter
      Bool: 0
      Int: 
      List[1]: 
        ZeroInit: 
          TLong: 4
  List[3]: 
    TacFunction: 
      TIdentifier: callee
      Bool: 1
      List[1]: 
        TIdentifier: i.0
      List[30]: 
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: i.0
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: binop.5
        TacJumpIfZero: 
          TIdentifier: and_false.2
          TacVariable: 
            TIdentifier: binop.5
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: called_counter
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.6
        TacJumpIfZero: 
          TIdentifier: and_false.2
          TacVariable: 
            TIdentifier: binop.6
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.4
        TacJump: 
          TIdentifier: and_true.3
        TacLabel: 
          TIdentifier: and_false.2
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.4
        TacLabel: 
          TIdentifier: and_true.3
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: binop.4
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: called_counter
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.1
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: i.0
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: binop.8
        TacJumpIfZero: 
          TIdentifier: and_false.5
          TacVariable: 
            TIdentifier: binop.8
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: called_counter
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.9
        TacJumpIfZero: 
          TIdentifier: and_false.5
          TacVariable: 
            TIdentifier: binop.9
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.7
        TacJump: 
          TIdentifier: and_true.6
        TacLabel: 
          TIdentifier: and_false.5
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.7
        TacLabel: 
          TIdentifier: and_true.6
        TacJumpIfZero: 
          TIdentifier: if_false.4
          TacVariable: 
            TIdentifier: binop.7
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: called_counter
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacLabel: 
          TIdentifier: if_false.4
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: unop.10
        TacCopy: 
          TacVariable: 
            TIdentifier: unop.10
          TacVariable: 
            TIdentifier: called_counter
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: target
      Bool: 1
      List[0]: 
      List[10]: 
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: y.1
        TacLabel: 
          TIdentifier: do_while_start.7
        TacFunCall: 
          TIdentifier: callee
          List[1]: 
            TacVariable: 
              TIdentifier: y.1
          TacVariable: 
            TIdentifier: call.11
        TacCopy: 
          TacVariable: 
            TIdentifier: call.11
          TacVariable: 
            TIdentifier: keep_looping.2
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: y.1
        TacLabel: 
          TIdentifier: continue_do_while.0
        TacJumpIfNotZero: 
          TIdentifier: do_while_start.7
          TacVariable: 
            TIdentifier: keep_looping.2
        TacLabel: 
          TIdentifier: break_do_while.0
        TacReturn: 
          TacVariable: 
            TIdentifier: y.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[12]: 
        TacFunCall: 
          TIdentifier: target
          List[0]: 
          TacVariable: 
            TIdentifier: call.12
        TacCopy: 
          TacVariable: 
            TIdentifier: call.12
          TacVariable: 
            TIdentifier: result.3
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: result.3
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: binop.13
        TacJumpIfZero: 
          TIdentifier: if_false.8
          TacVariable: 
            TIdentifier: binop.13
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.8
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: called_counter
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.14
        TacJumpIfZero: 
          TIdentifier: if_false.9
          TacVariable: 
            TIdentifier: binop.14
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.9
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(19):
  [called_counter]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 0
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [i.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [callee]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [target]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [y.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [keep_looping.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [result.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
