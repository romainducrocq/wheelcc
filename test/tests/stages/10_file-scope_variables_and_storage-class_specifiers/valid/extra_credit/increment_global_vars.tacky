-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[2]: 
    TacStaticVariable: 
      TIdentifier: i
      Bool: 1
      Int: 
      List[1]: 
        ZeroInit: 
          TLong: 4
    TacStaticVariable: 
      TIdentifier: j
      Bool: 1
      Int: 
      List[1]: 
        ZeroInit: 
          TLong: 4
  List[3]: 
    TacFunction: 
      TIdentifier: incr_i
      Bool: 1
      List[0]: 
      List[10]: 
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: i
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.0
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: binop.0
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: i
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.1
        TacCopy: 
          TacVariable: 
            TIdentifier: i
          TacVariable: 
            TIdentifier: assign.2
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.1
          TacVariable: 
            TIdentifier: i
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: i
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.3
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.3
          TacVariable: 
            TIdentifier: i
        TacLabel: 
          TIdentifier: if_false.0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: decr_j
      Bool: 1
      List[0]: 
      List[9]: 
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: unop.4
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: j
          TacVariable: 
            TIdentifier: unop.4
          TacVariable: 
            TIdentifier: binop.5
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: binop.5
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: j
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.6
        TacCopy: 
          TacVariable: 
            TIdentifier: j
          TacVariable: 
            TIdentifier: assign.7
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.6
          TacVariable: 
            TIdentifier: j
        TacLabel: 
          TIdentifier: if_false.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[30]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: i
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.9
        TacCopy: 
          TacVariable: 
            TIdentifier: i
          TacVariable: 
            TIdentifier: assign.10
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.9
          TacVariable: 
            TIdentifier: i
        TacJumpIfZero: 
          TIdentifier: ternary_else.2
          TacVariable: 
            TIdentifier: assign.10
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: ternop.8
        TacJump: 
          TIdentifier: ternary_false.3
        TacLabel: 
          TIdentifier: ternary_else.2
        TacFunCall: 
          TIdentifier: incr_i
          List[0]: 
          TacVariable: 
            TIdentifier: call.11
        TacCopy: 
          TacVariable: 
            TIdentifier: call.11
          TacVariable: 
            TIdentifier: ternop.8
        TacLabel: 
          TIdentifier: ternary_false.3
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: i
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: binop.12
        TacJumpIfZero: 
          TIdentifier: if_false.4
          TacVariable: 
            TIdentifier: binop.12
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.4
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: j
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.14
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.14
          TacVariable: 
            TIdentifier: j
        TacJumpIfZero: 
          TIdentifier: ternary_else.5
          TacVariable: 
            TIdentifier: j
        TacFunCall: 
          TIdentifier: decr_j
          List[0]: 
          TacVariable: 
            TIdentifier: call.15
        TacCopy: 
          TacVariable: 
            TIdentifier: call.15
          TacVariable: 
            TIdentifier: ternop.13
        TacJump: 
          TIdentifier: ternary_false.6
        TacLabel: 
          TIdentifier: ternary_else.5
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: ternop.13
        TacLabel: 
          TIdentifier: ternary_false.6
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: unop.16
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: j
          TacVariable: 
            TIdentifier: unop.16
          TacVariable: 
            TIdentifier: binop.17
        TacJumpIfZero: 
          TIdentifier: if_false.7
          TacVariable: 
            TIdentifier: binop.17
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(23):
  [i]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [j]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [incr_i]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [decr_j]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ternop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ternop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
