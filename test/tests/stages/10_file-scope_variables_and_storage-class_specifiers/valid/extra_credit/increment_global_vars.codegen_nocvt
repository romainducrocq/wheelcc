-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[5]: 
    AsmStaticVariable: 
      TIdentifier: i
      TInt: 4
      Bool: 1
      List[1]: 
        ZeroInit: 
          TLong: 4
    AsmStaticVariable: 
      TIdentifier: j
      TInt: 4
      Bool: 1
      List[1]: 
        ZeroInit: 
          TLong: 4
    AsmFunction: 
      TIdentifier: incr_i
      Bool: 1
      Bool: 0
      List[17]: 
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.0
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: binop.0
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.0
        AsmJmpCC: 
          TIdentifier: if_false.0
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: binop.1
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.1
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: assign.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.1
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: binop.3
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.3
          AsmPseudo: 
            TIdentifier: i
        AsmLabel: 
          TIdentifier: if_false.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: decr_j
      Bool: 1
      Bool: 0
      List[16]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.4
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.4
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.4
          AsmPseudo: 
            TIdentifier: j
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: binop.5
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmJmpCC: 
          TIdentifier: if_false.1
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: j
          AsmPseudo: 
            TIdentifier: binop.6
        AsmBinary: 
          AsmSub: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.6
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: j
          AsmPseudo: 
            TIdentifier: assign.7
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.6
          AsmPseudo: 
            TIdentifier: j
        AsmLabel: 
          TIdentifier: if_false.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[47]: 
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: binop.9
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.9
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i
          AsmPseudo: 
            TIdentifier: assign.10
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.9
          AsmPseudo: 
            TIdentifier: i
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: assign.10
        AsmJmpCC: 
          TIdentifier: ternary_else.2
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: ternop.8
        AsmJmp: 
          TIdentifier: ternary_false.3
        AsmLabel: 
          TIdentifier: ternary_else.2
        AsmCall: 
          TIdentifier: incr_i
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.11
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.11
          AsmPseudo: 
            TIdentifier: ternop.8
        AsmLabel: 
          TIdentifier: ternary_false.3
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.12
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmJmpCC: 
          TIdentifier: if_false.4
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.4
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: j
          AsmPseudo: 
            TIdentifier: binop.14
        AsmBinary: 
          AsmSub: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.14
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.14
          AsmPseudo: 
            TIdentifier: j
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: j
        AsmJmpCC: 
          TIdentifier: ternary_else.5
          AsmE: 
        AsmCall: 
          TIdentifier: decr_j
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.15
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.15
          AsmPseudo: 
            TIdentifier: ternop.13
        AsmJmp: 
          TIdentifier: ternary_false.6
        AsmLabel: 
          TIdentifier: ternary_else.5
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: ternop.13
        AsmLabel: 
          TIdentifier: ternary_false.6
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.16
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.16
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.16
          AsmPseudo: 
            TIdentifier: j
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.17
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.17
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.17
        AsmJmpCC: 
          TIdentifier: if_false.7
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.7
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(23):
  [i]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [j]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 4
  [incr_i]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [decr_j]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ternop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [assign.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ternop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
