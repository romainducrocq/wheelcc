-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[1]: 
    TacFunction: 
      TIdentifier: read_x
      Bool: 1
      List[0]: 
      List[10]: 
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: x.0
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: x.0
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: binop.1
        TacJumpIfZero: 
          TIdentifier: if_else.0
          TacVariable: 
            TIdentifier: binop.1
        TacReturn: 
          TacVariable: 
            TIdentifier: x
        TacJump: 
          TIdentifier: if_false.1
        TacLabel: 
          TIdentifier: if_else.0
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: unop.2
        TacReturn: 
          TacVariable: 
            TIdentifier: unop.2
        TacLabel: 
          TIdentifier: if_false.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(5):
  [read_x]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [x.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [x]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        NoInitializer: 
  [binop.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
