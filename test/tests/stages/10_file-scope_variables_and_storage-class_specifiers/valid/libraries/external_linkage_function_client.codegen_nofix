-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[3]: 
    AsmFunction: 
      TIdentifier: add_one_and_two
      Bool: 1
      Bool: 0
      List[8]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: sum
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.11
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.11
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: add_three_and_four
      Bool: 1
      Bool: 0
      List[17]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: sum.8
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: sum.8
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmSetCC: 
          AsmG: 
          AsmPseudo: 
            TIdentifier: binop.12
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmJmpCC: 
          TIdentifier: if_false.0
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: sum
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.13
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: call.13
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[24]: 
        AsmCall: 
          TIdentifier: add_three_and_four
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.14
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 7
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.14
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.15
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.15
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.15
        AsmJmpCC: 
          TIdentifier: if_false.1
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.1
        AsmCall: 
          TIdentifier: add_one_and_two
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.16
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.16
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.17
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.17
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.17
        AsmJmpCC: 
          TIdentifier: if_false.2
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.2
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(12):
  [add_one_and_two]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [sum]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [add_three_and_four]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [sum.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [call.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(12):
  [add_one_and_two]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [sum]: 
    BackendFun: 
      Bool: 0
      List[0]: 
  [add_three_and_four]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [sum.8]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [main]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [call.11]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.12]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [call.13]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [call.14]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.15]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [call.16]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [binop.17]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
