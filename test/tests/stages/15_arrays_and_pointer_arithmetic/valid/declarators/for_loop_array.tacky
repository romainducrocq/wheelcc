-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[1]: 
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[23]: 
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: counter.0
        TacCopyToOffset: 
          TIdentifier: i.1
          TLong: 0
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacCopyToOffset: 
          TIdentifier: i.1
          TLong: 4
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacCopyToOffset: 
          TIdentifier: i.1
          TLong: 8
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: for_start.1
        TacBinary: 
          TacLessThan: 
          TacVariable: 
            TIdentifier: counter.0
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: binop.2
        TacJumpIfZero: 
          TIdentifier: break_for.0
          TacVariable: 
            TIdentifier: binop.2
        TacGetAddress: 
          TacVariable: 
            TIdentifier: i.1
          TacVariable: 
            TIdentifier: addr.3
        TacSignExtend: 
          TacVariable: 
            TIdentifier: counter.0
          TacVariable: 
            TIdentifier: cast.4
        TacAddPtr: 
          TLong: 4
          TacVariable: 
            TIdentifier: addr.3
          TacVariable: 
            TIdentifier: cast.4
          TacVariable: 
            TIdentifier: subscr.5
        TacLoad: 
          TacVariable: 
            TIdentifier: subscr.5
          TacVariable: 
            TIdentifier: subscr.6
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: counter.0
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.7
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: subscr.6
          TacVariable: 
            TIdentifier: binop.7
          TacVariable: 
            TIdentifier: binop.8
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: binop.8
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.2
        TacLabel: 
          TIdentifier: continue_for.0
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: counter.0
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.9
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.9
          TacVariable: 
            TIdentifier: counter.0
        TacJump: 
          TIdentifier: for_start.1
        TacLabel: 
          TIdentifier: break_for.0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(11):
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [counter.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [i.1]: 
    Symbol: 
      Array: 
        TLong: 3
        Int: 
      LocalAttr: 
  [binop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [addr.3]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.5]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
