-- Lexing ... OK
+
+
@@ Tokens @@
List[433]:
  unsigned
  long
  identifier(gt)
  (
  unsigned
  long
  *
  identifier(a)
  ,
  unsigned
  long
  *
  identifier(b)
  )
  {
  return
  identifier(a)
  >
  identifier(b)
  ;
  }
  unsigned
  long
  identifier(lt)
  (
  unsigned
  long
  *
  identifier(a)
  ,
  unsigned
  long
  *
  identifier(b)
  )
  {
  return
  identifier(a)
  <
  identifier(b)
  ;
  }
  unsigned
  long
  identifier(ge)
  (
  unsigned
  long
  *
  identifier(a)
  ,
  unsigned
  long
  *
  identifier(b)
  )
  {
  return
  identifier(a)
  >=
  identifier(b)
  ;
  }
  unsigned
  long
  identifier(le)
  (
  unsigned
  long
  *
  identifier(a)
  ,
  unsigned
  long
  *
  identifier(b)
  )
  {
  return
  identifier(a)
  <=
  identifier(b)
  ;
  }
  unsigned
  long
  identifier(gt_nested)
  (
  unsigned
  long
  (
  *
  identifier(a)
  )
  [
  const int(5)
  ]
  ,
  unsigned
  long
  (
  *
  identifier(b)
  )
  [
  const int(5)
  ]
  )
  {
  return
  identifier(a)
  >
  identifier(b)
  ;
  }
  unsigned
  long
  identifier(ge_nested)
  (
  unsigned
  long
  (
  *
  identifier(a)
  )
  [
  const int(5)
  ]
  ,
  unsigned
  long
  (
  *
  identifier(b)
  )
  [
  const int(5)
  ]
  )
  {
  return
  identifier(a)
  >=
  identifier(b)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  unsigned
  long
  identifier(arr)
  [
  const int(5)
  ]
  ;
  unsigned
  long
  *
  identifier(elem_1)
  =
  identifier(arr)
  +
  const int(1)
  ;
  unsigned
  long
  *
  identifier(elem_4)
  =
  identifier(arr)
  +
  const int(4)
  ;
  if
  (
  identifier(gt)
  (
  identifier(elem_1)
  ,
  identifier(elem_4)
  )
  )
  {
  return
  const int(1)
  ;
  }
  if
  (
  !
  (
  identifier(lt)
  (
  identifier(elem_1)
  ,
  identifier(elem_4)
  )
  )
  )
  {
  return
  const int(2)
  ;
  }
  if
  (
  !
  (
  identifier(ge)
  (
  identifier(elem_1)
  ,
  identifier(elem_1)
  )
  )
  )
  {
  return
  const int(3)
  ;
  }
  if
  (
  identifier(le)
  (
  identifier(elem_4)
  ,
  identifier(elem_1)
  )
  )
  {
  return
  const int(4)
  ;
  }
  unsigned
  long
  *
  identifier(one_past_the_end)
  =
  identifier(arr)
  +
  const int(5)
  ;
  if
  (
  !
  (
  identifier(gt)
  (
  identifier(one_past_the_end)
  ,
  identifier(elem_4)
  )
  )
  )
  {
  return
  const int(5)
  ;
  }
  if
  (
  identifier(one_past_the_end)
  !=
  identifier(elem_4)
  +
  const int(1)
  )
  {
  return
  const int(6)
  ;
  }
  unsigned
  long
  identifier(nested_arr)
  [
  const int(4)
  ]
  [
  const int(5)
  ]
  ;
  unsigned
  long
  *
  identifier(elem_3_2)
  =
  *
  (
  identifier(nested_arr)
  +
  const int(3)
  )
  +
  const int(2)
  ;
  unsigned
  long
  *
  identifier(elem_3_3)
  =
  *
  (
  identifier(nested_arr)
  +
  const int(3)
  )
  +
  const int(3)
  ;
  if
  (
  identifier(lt)
  (
  identifier(elem_3_3)
  ,
  identifier(elem_3_2)
  )
  )
  {
  return
  const int(7)
  ;
  }
  if
  (
  !
  identifier(ge)
  (
  identifier(elem_3_3)
  ,
  identifier(elem_3_2)
  )
  )
  {
  return
  const int(8)
  ;
  }
  unsigned
  long
  (
  *
  identifier(subarray_0)
  )
  [
  const int(5)
  ]
  =
  identifier(nested_arr)
  ;
  unsigned
  long
  (
  *
  identifier(subarray_3)
  )
  [
  const int(5)
  ]
  =
  identifier(nested_arr)
  +
  const int(3)
  ;
  unsigned
  long
  (
  *
  identifier(subarray_one_past_the_end)
  )
  [
  const int(5)
  ]
  =
  identifier(nested_arr)
  +
  const int(4)
  ;
  if
  (
  identifier(ge_nested)
  (
  identifier(subarray_0)
  ,
  identifier(subarray_3)
  )
  )
  {
  return
  const int(9)
  ;
  }
  if
  (
  !
  (
  identifier(gt_nested)
  (
  identifier(subarray_one_past_the_end)
  ,
  identifier(subarray_3)
  )
  )
  )
  {
  return
  const int(10)
  ;
  }
  if
  (
  identifier(subarray_3)
  !=
  identifier(subarray_one_past_the_end)
  -
  const int(1)
  )
  {
  return
  const int(11)
  ;
  }
  return
  const int(0)
  ;
  }
