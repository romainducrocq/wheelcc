-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[1]: 
    TacStaticVariable: 
      TIdentifier: zero.1
      Bool: 0
      Double: 
      List[1]: 
        ZeroInit: 
          TLong: 8
  List[1]: 
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[38]: 
        TacBinary: 
          TacDivide: 
          TacConstant: 
            CConstDouble: 
              TDouble: 0.000000
          TacVariable: 
            TIdentifier: zero.1
          TacVariable: 
            TIdentifier: binop.3
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.3
          TacVariable: 
            TIdentifier: nan.2
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.4
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: cast.4
          TacVariable: 
            TIdentifier: binop.5
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.5
          TacVariable: 
            TIdentifier: nan.2
        TacFunCall: 
          TIdentifier: double_isnan
          List[1]: 
            TacVariable: 
              TIdentifier: nan.2
          TacVariable: 
            TIdentifier: call.6
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.6
          TacVariable: 
            TIdentifier: unop.7
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: unop.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.8
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: cast.8
          TacVariable: 
            TIdentifier: binop.9
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.9
          TacVariable: 
            TIdentifier: nan.2
        TacFunCall: 
          TIdentifier: double_isnan
          List[1]: 
            TacVariable: 
              TIdentifier: nan.2
          TacVariable: 
            TIdentifier: call.10
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.10
          TacVariable: 
            TIdentifier: unop.11
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: unop.11
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.1
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.12
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: cast.12
          TacVariable: 
            TIdentifier: binop.13
        TacCopy: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: assign.14
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.13
          TacVariable: 
            TIdentifier: nan.2
        TacFunCall: 
          TIdentifier: double_isnan
          List[1]: 
            TacVariable: 
              TIdentifier: assign.14
          TacVariable: 
            TIdentifier: call.15
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.15
          TacVariable: 
            TIdentifier: unop.16
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: unop.16
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.2
        TacIntToDouble: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.17
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: cast.17
          TacVariable: 
            TIdentifier: binop.18
        TacCopy: 
          TacVariable: 
            TIdentifier: nan.2
          TacVariable: 
            TIdentifier: assign.19
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.18
          TacVariable: 
            TIdentifier: nan.2
        TacFunCall: 
          TIdentifier: double_isnan
          List[1]: 
            TacVariable: 
              TIdentifier: assign.19
          TacVariable: 
            TIdentifier: call.20
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.20
          TacVariable: 
            TIdentifier: unop.21
        TacJumpIfZero: 
          TIdentifier: if_false.3
          TacVariable: 
            TIdentifier: unop.21
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 4
        TacLabel: 
          TIdentifier: if_false.3
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(23):
  [double_isnan]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Double: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [zero.1]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 0
        Initial: 
          List[1]: 
            ZeroInit: 
              TLong: 8
  [nan.2]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.8]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.12]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [assign.14]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.17]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.18]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [assign.19]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.21]: 
    Symbol: 
      Int: 
      LocalAttr: 
