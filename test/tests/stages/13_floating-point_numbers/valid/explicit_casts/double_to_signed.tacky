-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[3]: 
    TacFunction: 
      TIdentifier: double_to_int
      Bool: 1
      List[1]: 
        TIdentifier: d.0
      List[3]: 
        TacDoubleToInt: 
          TacVariable: 
            TIdentifier: d.0
          TacVariable: 
            TIdentifier: cast.4
        TacReturn: 
          TacVariable: 
            TIdentifier: cast.4
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: double_to_long
      Bool: 1
      List[1]: 
        TIdentifier: d.1
      List[3]: 
        TacDoubleToInt: 
          TacVariable: 
            TIdentifier: d.1
          TacVariable: 
            TIdentifier: cast.5
        TacReturn: 
          TacVariable: 
            TIdentifier: cast.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[16]: 
        TacFunCall: 
          TIdentifier: double_to_long
          List[1]: 
            TacConstant: 
              CConstDouble: 
                TDouble: 2148429099.300000
          TacVariable: 
            TIdentifier: call.6
        TacCopy: 
          TacVariable: 
            TIdentifier: call.6
          TacVariable: 
            TIdentifier: l.2
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: l.2
          TacConstant: 
            CConstLong: 
              TLong: 2148429099
          TacVariable: 
            TIdentifier: binop.7
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: binop.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstDouble: 
              TDouble: 200000.999900
          TacVariable: 
            TIdentifier: unop.8
        TacFunCall: 
          TIdentifier: double_to_int
          List[1]: 
            TacVariable: 
              TIdentifier: unop.8
          TacVariable: 
            TIdentifier: call.9
        TacCopy: 
          TacVariable: 
            TIdentifier: call.9
          TacVariable: 
            TIdentifier: i.3
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 200000
          TacVariable: 
            TIdentifier: unop.10
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: i.3
          TacVariable: 
            TIdentifier: unop.10
          TacVariable: 
            TIdentifier: binop.11
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: binop.11
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(15):
  [d.0]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [double_to_int]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Double: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [d.1]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [double_to_long]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Double: 
        Long: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [l.2]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [i.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.5]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.8]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
