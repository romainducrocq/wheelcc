-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[1]: 
    AsmFunction: 
      TIdentifier: fun
      Bool: 1
      Bool: 0
      List[27]: 
        AsmMov: 
          BackendDouble: 
          AsmRegister: 
            AsmXMM0: 
          AsmPseudo: 
            TIdentifier: x.0
        AsmCvtsi2sd: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.2
        AsmCmp: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: cast.2
          AsmPseudo: 
            TIdentifier: x.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmJmpCC: 
          TIdentifier: comisd_nan.2
          AsmP: 
        AsmSetCC: 
          AsmA: 
          AsmPseudo: 
            TIdentifier: binop.3
        AsmLabel: 
          TIdentifier: comisd_nan.2
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.3
        AsmJmpCC: 
          TIdentifier: if_else.0
          AsmE: 
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: x.0
          AsmRegister: 
            AsmXMM0: 
        AsmRet: 
        AsmJmp: 
          TIdentifier: if_false.1
        AsmLabel: 
          TIdentifier: if_else.0
        AsmCvtsi2sd: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.4
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: x.0
          AsmPseudo: 
            TIdentifier: binop.5
        AsmBinary: 
          AsmAdd: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: cast.4
          AsmPseudo: 
            TIdentifier: binop.5
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: binop.5
          AsmRegister: 
            AsmXMM0: 
        AsmCall: 
          TIdentifier: fun
        AsmMov: 
          BackendDouble: 
          AsmRegister: 
            AsmXMM0: 
          AsmPseudo: 
            TIdentifier: call.6
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: call.6
          AsmPseudo: 
            TIdentifier: ret.1
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: ret.1
          AsmPseudo: 
            TIdentifier: binop.7
        AsmBinary: 
          AsmAdd: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: x.0
          AsmPseudo: 
            TIdentifier: binop.7
        AsmMov: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: binop.7
          AsmRegister: 
            AsmXMM0: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(9):
  [x.0]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [fun]: 
    Symbol: 
      FunType: 
        TULong: 4096
        TULong: 4096
        List[1]: 
          Double: 
        Double: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [ret.1]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [cast.2]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Double: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
