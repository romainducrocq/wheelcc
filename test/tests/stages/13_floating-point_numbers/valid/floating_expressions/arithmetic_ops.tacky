-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[7]: 
    TacStaticVariable: 
      TIdentifier: point_one
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4591870180066957722
    TacStaticVariable: 
      TIdentifier: point_two
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4596373779694328218
    TacStaticVariable: 
      TIdentifier: point_three
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4599075939470750515
    TacStaticVariable: 
      TIdentifier: two
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4611686018427387904
    TacStaticVariable: 
      TIdentifier: three
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4613937818241073152
    TacStaticVariable: 
      TIdentifier: four
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 4616189618054758400
    TacStaticVariable: 
      TIdentifier: twelveE30
      Bool: 1
      Double: 
      List[1]: 
        DoubleInit: 
          TIdentifier: 5071878651310008751
  List[7]: 
    TacFunction: 
      TIdentifier: addition
      Bool: 1
      List[0]: 
      List[4]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: point_one
          TacVariable: 
            TIdentifier: point_two
          TacVariable: 
            TIdentifier: binop.2
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: binop.2
          TacConstant: 
            CConstDouble: 
              TDouble: 0.300000
          TacVariable: 
            TIdentifier: binop.3
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.3
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: subtraction
      Bool: 1
      List[0]: 
      List[4]: 
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: four
          TacConstant: 
            CConstDouble: 
              TDouble: 1.000000
          TacVariable: 
            TIdentifier: binop.4
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: binop.4
          TacConstant: 
            CConstDouble: 
              TDouble: 3.000000
          TacVariable: 
            TIdentifier: binop.5
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: multiplication
      Bool: 1
      List[0]: 
      List[4]: 
        TacBinary: 
          TacMultiply: 
          TacConstant: 
            CConstDouble: 
              TDouble: 0.010000
          TacVariable: 
            TIdentifier: point_three
          TacVariable: 
            TIdentifier: binop.6
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: binop.6
          TacConstant: 
            CConstDouble: 
              TDouble: 0.003000
          TacVariable: 
            TIdentifier: binop.7
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: division
      Bool: 1
      List[0]: 
      List[4]: 
        TacBinary: 
          TacDivide: 
          TacConstant: 
            CConstDouble: 
              TDouble: 7.000000
          TacVariable: 
            TIdentifier: two
          TacVariable: 
            TIdentifier: binop.8
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: binop.8
          TacConstant: 
            CConstDouble: 
              TDouble: 3.500000
          TacVariable: 
            TIdentifier: binop.9
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.9
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: negation
      Bool: 1
      List[0]: 
      List[6]: 
        TacUnary: 
          TacNegate: 
          TacVariable: 
            TIdentifier: twelveE30
          TacVariable: 
            TIdentifier: unop.10
        TacCopy: 
          TacVariable: 
            TIdentifier: unop.10
          TacVariable: 
            TIdentifier: neg.0
        TacBinary: 
          TacAdd: 
          TacConstant: 
            CConstDouble: 
              TDouble: 11999999999999999112715591221248.000000
          TacVariable: 
            TIdentifier: neg.0
          TacVariable: 
            TIdentifier: binop.11
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: binop.11
          TacVariable: 
            TIdentifier: unop.12
        TacReturn: 
          TacVariable: 
            TIdentifier: unop.12
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: complex_expression
      Bool: 1
      List[0]: 
      List[8]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: two
          TacVariable: 
            TIdentifier: three
          TacVariable: 
            TIdentifier: binop.13
        TacBinary: 
          TacMultiply: 
          TacConstant: 
            CConstDouble: 
              TDouble: 127.500000
          TacVariable: 
            TIdentifier: four
          TacVariable: 
            TIdentifier: binop.14
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: binop.13
          TacVariable: 
            TIdentifier: binop.14
          TacVariable: 
            TIdentifier: binop.15
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.15
          TacVariable: 
            TIdentifier: complex_expression.1
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstDouble: 
              TDouble: 505.000000
          TacVariable: 
            TIdentifier: unop.16
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: complex_expression.1
          TacVariable: 
            TIdentifier: unop.16
          TacVariable: 
            TIdentifier: binop.17
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.17
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[32]: 
        TacFunCall: 
          TIdentifier: addition
          List[0]: 
          TacVariable: 
            TIdentifier: call.18
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.18
          TacVariable: 
            TIdentifier: unop.19
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: unop.19
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacFunCall: 
          TIdentifier: subtraction
          List[0]: 
          TacVariable: 
            TIdentifier: call.20
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.20
          TacVariable: 
            TIdentifier: unop.21
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: unop.21
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.1
        TacFunCall: 
          TIdentifier: multiplication
          List[0]: 
          TacVariable: 
            TIdentifier: call.22
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.22
          TacVariable: 
            TIdentifier: unop.23
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: unop.23
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.2
        TacFunCall: 
          TIdentifier: division
          List[0]: 
          TacVariable: 
            TIdentifier: call.24
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.24
          TacVariable: 
            TIdentifier: unop.25
        TacJumpIfZero: 
          TIdentifier: if_false.3
          TacVariable: 
            TIdentifier: unop.25
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 4
        TacLabel: 
          TIdentifier: if_false.3
        TacFunCall: 
          TIdentifier: negation
          List[0]: 
          TacVariable: 
            TIdentifier: call.26
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.26
          TacVariable: 
            TIdentifier: unop.27
        TacJumpIfZero: 
          TIdentifier: if_false.4
          TacVariable: 
            TIdentifier: unop.27
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 5
        TacLabel: 
          TIdentifier: if_false.4
        TacFunCall: 
          TIdentifier: complex_expression
          List[0]: 
          TacVariable: 
            TIdentifier: call.28
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.28
          TacVariable: 
            TIdentifier: unop.29
        TacJumpIfZero: 
          TIdentifier: if_false.5
          TacVariable: 
            TIdentifier: unop.29
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 5
        TacLabel: 
          TIdentifier: if_false.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(44):
  [point_one]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4591870180066957722
  [point_two]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4596373779694328218
  [point_three]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4599075939470750515
  [two]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4611686018427387904
  [three]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4613937818241073152
  [four]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 4616189618054758400
  [twelveE30]: 
    Symbol: 
      Double: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            DoubleInit: 
              TIdentifier: 5071878651310008751
  [addition]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [subtraction]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [multiplication]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [division]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [negation]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [neg.0]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [complex_expression]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [complex_expression.1]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.2]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.6]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.8]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.10]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.11]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [unop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.14]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.15]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [unop.16]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.18]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.19]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.21]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.22]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.23]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.27]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.28]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.29]: 
    Symbol: 
      Int: 
      LocalAttr: 
