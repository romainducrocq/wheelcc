-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[1]: 
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[8]: 
        TacFunCall: 
          TIdentifier: add
          List[2]: 
            TacConstant: 
              CConstInt: 
                TInt: 2147483645
            TacConstant: 
              CConstInt: 
                TInt: 2147483645
          TacVariable: 
            TIdentifier: call.3
        TacCopy: 
          TacVariable: 
            TIdentifier: call.3
          TacVariable: 
            TIdentifier: a.2
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: a.2
          TacConstant: 
            CConstLong: 
              TLong: 4294967290
          TacVariable: 
            TIdentifier: binop.4
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: binop.4
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(5):
  [add]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Long: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [a.2]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.3]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
