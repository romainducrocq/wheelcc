-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[1]: 
    TacStaticVariable: 
      TIdentifier: l
      Bool: 1
      Long: 
      List[1]: 
        LongInit: 
          TLong: 8589934592
  List[2]: 
    TacFunction: 
      TIdentifier: return_l
      Bool: 1
      List[0]: 
      List[2]: 
        TacReturn: 
          TacVariable: 
            TIdentifier: l
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: return_l_as_int
      Bool: 1
      List[0]: 
      List[3]: 
        TacTruncate: 
          TacVariable: 
            TIdentifier: l
          TacVariable: 
            TIdentifier: cast.0
        TacReturn: 
          TacVariable: 
            TIdentifier: cast.0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(4):
  [l]: 
    Symbol: 
      Long: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            LongInit: 
              TLong: 8589934592
  [return_l]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Long: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [return_l_as_int]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [cast.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
