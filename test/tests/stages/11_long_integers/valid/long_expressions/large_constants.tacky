-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[1]: 
    TacStaticVariable: 
      TIdentifier: x
      Bool: 1
      Long: 
      List[1]: 
        LongInit: 
          TLong: 5
  List[4]: 
    TacFunction: 
      TIdentifier: add_large
      Bool: 1
      List[0]: 
      List[5]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 4294967290
          TacVariable: 
            TIdentifier: binop.0
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.0
          TacVariable: 
            TIdentifier: x
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 4294967295
          TacVariable: 
            TIdentifier: binop.1
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: subtract_large
      Bool: 1
      List[0]: 
      List[5]: 
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 4294967290
          TacVariable: 
            TIdentifier: binop.2
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.2
          TacVariable: 
            TIdentifier: x
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 5
          TacVariable: 
            TIdentifier: binop.3
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.3
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: multiply_by_large
      Bool: 1
      List[0]: 
      List[5]: 
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 4294967290
          TacVariable: 
            TIdentifier: binop.4
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.4
          TacVariable: 
            TIdentifier: x
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: x
          TacConstant: 
            CConstLong: 
              TLong: 21474836450
          TacVariable: 
            TIdentifier: binop.5
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[17]: 
        TacFunCall: 
          TIdentifier: add_large
          List[0]: 
          TacVariable: 
            TIdentifier: call.6
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.6
          TacVariable: 
            TIdentifier: unop.7
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: unop.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacFunCall: 
          TIdentifier: subtract_large
          List[0]: 
          TacVariable: 
            TIdentifier: call.8
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.8
          TacVariable: 
            TIdentifier: unop.9
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: unop.9
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.1
        TacFunCall: 
          TIdentifier: multiply_by_large
          List[0]: 
          TacVariable: 
            TIdentifier: call.10
        TacUnary: 
          TacNot: 
          TacVariable: 
            TIdentifier: call.10
          TacVariable: 
            TIdentifier: unop.11
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: unop.11
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.2
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(17):
  [x]: 
    Symbol: 
      Long: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            LongInit: 
              TLong: 5
  [add_large]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [subtract_large]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [multiply_by_large]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.0]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.2]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
