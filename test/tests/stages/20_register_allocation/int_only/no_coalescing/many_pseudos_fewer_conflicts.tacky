-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[2]: 
    TacFunction: 
      TIdentifier: return_five
      Bool: 1
      List[0]: 
      List[2]: 
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: target
      Bool: 1
      List[3]: 
        TIdentifier: one.22
        TIdentifier: two.23
        TIdentifier: three.24
      List[78]: 
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: one.22
          TacVariable: 
            TIdentifier: three.24
          TacVariable: 
            TIdentifier: binop.42
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.42
          TacVariable: 
            TIdentifier: sum.25
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: sum.25
          TacVariable: 
            TIdentifier: three.24
          TacVariable: 
            TIdentifier: binop.43
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.43
          TacVariable: 
            TIdentifier: product.26
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: three.24
          TacVariable: 
            TIdentifier: two.23
          TacVariable: 
            TIdentifier: binop.44
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: product.26
          TacVariable: 
            TIdentifier: binop.44
          TacVariable: 
            TIdentifier: binop.45
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.45
          TacVariable: 
            TIdentifier: diff.27
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: sum.25
            TacConstant: 
              CConstInt: 
                TInt: 4
          TacVariable: 
            TIdentifier: call.46
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: product.26
            TacConstant: 
              CConstInt: 
                TInt: 12
          TacVariable: 
            TIdentifier: call.47
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: diff.27
            TacConstant: 
              CConstInt: 
                TInt: 7
          TacVariable: 
            TIdentifier: call.48
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: i.28
        TacLabel: 
          TIdentifier: for_start.1
        TacBinary: 
          TacLessThan: 
          TacVariable: 
            TIdentifier: i.28
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.49
        TacJumpIfZero: 
          TIdentifier: break_for.0
          TacVariable: 
            TIdentifier: binop.49
        TacBinary: 
          TacRemainder: 
          TacVariable: 
            TIdentifier: i.28
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.50
        TacJumpIfZero: 
          TIdentifier: if_else.2
          TacVariable: 
            TIdentifier: binop.50
        TacFunCall: 
          TIdentifier: return_five
          List[0]: 
          TacVariable: 
            TIdentifier: call.51
        TacCopy: 
          TacVariable: 
            TIdentifier: call.51
          TacVariable: 
            TIdentifier: five.29
        TacBinary: 
          TacDivide: 
          TacConstant: 
            CConstInt: 
              TInt: 25
          TacVariable: 
            TIdentifier: five.29
          TacVariable: 
            TIdentifier: binop.52
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.52
          TacVariable: 
            TIdentifier: quotient.30
        TacBinary: 
          TacRemainder: 
          TacConstant: 
            CConstInt: 
              TInt: 27
          TacVariable: 
            TIdentifier: five.29
          TacVariable: 
            TIdentifier: binop.53
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.53
          TacVariable: 
            TIdentifier: remainder.31
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: quotient.30
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: binop.54
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: remainder.31
          TacConstant: 
            CConstInt: 
              TInt: 4
          TacVariable: 
            TIdentifier: binop.55
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: binop.54
          TacVariable: 
            TIdentifier: binop.55
          TacVariable: 
            TIdentifier: binop.56
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.56
          TacVariable: 
            TIdentifier: complex.32
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: quotient.30
            TacConstant: 
              CConstInt: 
                TInt: 5
          TacVariable: 
            TIdentifier: call.57
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: remainder.31
            TacConstant: 
              CConstInt: 
                TInt: 2
          TacVariable: 
            TIdentifier: call.58
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: complex.32
            TacConstant: 
              CConstInt: 
                TInt: 48
          TacVariable: 
            TIdentifier: call.59
        TacJump: 
          TIdentifier: if_false.3
        TacLabel: 
          TIdentifier: if_else.2
        TacFunCall: 
          TIdentifier: return_five
          List[0]: 
          TacVariable: 
            TIdentifier: call.60
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: call.60
          TacConstant: 
            CConstInt: 
              TInt: 20
          TacVariable: 
            TIdentifier: binop.61
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.61
          TacVariable: 
            TIdentifier: hundred.33
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: hundred.33
          TacConstant: 
            CConstInt: 
              TInt: 10
          TacVariable: 
            TIdentifier: binop.62
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.62
          TacVariable: 
            TIdentifier: ninety.34
        TacBinary: 
          TacRemainder: 
          TacVariable: 
            TIdentifier: i.28
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.64
        TacJumpIfZero: 
          TIdentifier: ternary_else.4
          TacVariable: 
            TIdentifier: binop.64
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: ternop.63
        TacJump: 
          TIdentifier: ternary_false.5
        TacLabel: 
          TIdentifier: ternary_else.4
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: hundred.33
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.65
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: binop.65
          TacConstant: 
            CConstInt: 
              TInt: 20
          TacVariable: 
            TIdentifier: binop.66
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.66
          TacVariable: 
            TIdentifier: ternop.63
        TacLabel: 
          TIdentifier: ternary_false.5
        TacCopy: 
          TacVariable: 
            TIdentifier: ternop.63
          TacVariable: 
            TIdentifier: seventy.35
        TacUnary: 
          TacNegate: 
          TacVariable: 
            TIdentifier: ninety.34
          TacVariable: 
            TIdentifier: unop.67
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: unop.67
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.68
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: binop.68
          TacVariable: 
            TIdentifier: hundred.33
          TacVariable: 
            TIdentifier: binop.69
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.69
          TacVariable: 
            TIdentifier: negative_one_forty_five.36
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: hundred.33
            TacConstant: 
              CConstInt: 
                TInt: 100
          TacVariable: 
            TIdentifier: call.70
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: ninety.34
            TacConstant: 
              CConstInt: 
                TInt: 90
          TacVariable: 
            TIdentifier: call.71
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: seventy.35
            TacConstant: 
              CConstInt: 
                TInt: 70
          TacVariable: 
            TIdentifier: call.72
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 145
          TacVariable: 
            TIdentifier: unop.73
        TacFunCall: 
          TIdentifier: check_one_int
          List[2]: 
            TacVariable: 
              TIdentifier: negative_one_forty_five.36
            TacVariable: 
              TIdentifier: unop.73
          TacVariable: 
            TIdentifier: call.74
        TacLabel: 
          TIdentifier: if_false.3
        TacLabel: 
          TIdentifier: continue_for.0
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: i.28
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.75
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.75
          TacVariable: 
            TIdentifier: i.28
        TacJump: 
          TIdentifier: for_start.1
        TacLabel: 
          TIdentifier: break_for.0
        TacFunCall: 
          TIdentifier: return_five
          List[0]: 
          TacVariable: 
            TIdentifier: call.76
        TacUnary: 
          TacComplement: 
          TacVariable: 
            TIdentifier: call.76
          TacVariable: 
            TIdentifier: unop.77
        TacCopy: 
          TacVariable: 
            TIdentifier: unop.77
          TacVariable: 
            TIdentifier: negative_six.37
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 11
          TacVariable: 
            TIdentifier: unop.78
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: unop.78
          TacVariable: 
            TIdentifier: negative_six.37
          TacVariable: 
            TIdentifier: binop.79
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.79
          TacVariable: 
            TIdentifier: negative_five.38
        TacFunCall: 
          TIdentifier: return_five
          List[0]: 
          TacVariable: 
            TIdentifier: call.80
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: call.80
          TacConstant: 
            CConstInt: 
              TInt: 9
          TacVariable: 
            TIdentifier: binop.81
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.81
          TacVariable: 
            TIdentifier: negative_four.39
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: negative_six.37
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.82
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.82
          TacVariable: 
            TIdentifier: negative_three.40
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: negative_six.37
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: binop.83
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.83
          TacVariable: 
            TIdentifier: negative_two.41
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 6
          TacVariable: 
            TIdentifier: unop.84
        TacFunCall: 
          TIdentifier: check_5_ints
          List[6]: 
            TacVariable: 
              TIdentifier: negative_six.37
            TacVariable: 
              TIdentifier: negative_five.38
            TacVariable: 
              TIdentifier: negative_four.39
            TacVariable: 
              TIdentifier: negative_three.40
            TacVariable: 
              TIdentifier: negative_two.41
            TacVariable: 
              TIdentifier: unop.84
          TacVariable: 
            TIdentifier: call.85
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(70):
  [check_one_int]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [check_5_ints]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[6]: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [check_12_ints]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[13]: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [id]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [return_five]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [one.22]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [two.23]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [three.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [target]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[3]: 
          Int: 
          Int: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [sum.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [product.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [diff.27]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [i.28]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [five.29]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [quotient.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [remainder.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [complex.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [hundred.33]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ninety.34]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [seventy.35]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_one_forty_five.36]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_six.37]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_five.38]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_four.39]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_three.40]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [negative_two.41]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.42]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.43]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.44]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.45]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.46]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.47]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.48]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.49]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.50]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.51]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.52]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.53]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.54]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.55]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.56]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.57]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.58]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.59]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.60]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.61]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.62]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [ternop.63]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.64]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.65]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.66]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.67]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.68]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.69]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.70]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.71]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.72]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.73]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.74]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.75]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.76]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.77]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.78]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.79]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.80]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.81]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.82]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.83]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.84]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.85]: 
    Symbol: 
      Int: 
      LocalAttr: 
