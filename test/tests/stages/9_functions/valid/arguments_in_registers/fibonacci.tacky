-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[2]: 
    TacFunction: 
      TIdentifier: fib
      Bool: 1
      List[1]: 
        TIdentifier: n.0
      List[21]: 
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: n.0
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.3
        TacJumpIfNotZero: 
          TIdentifier: or_true.2
          TacVariable: 
            TIdentifier: binop.3
        TacBinary: 
          TacEqual: 
          TacVariable: 
            TIdentifier: n.0
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.4
        TacJumpIfNotZero: 
          TIdentifier: or_true.2
          TacVariable: 
            TIdentifier: binop.4
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: binop.2
        TacJump: 
          TIdentifier: or_false.3
        TacLabel: 
          TIdentifier: or_true.2
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.2
        TacLabel: 
          TIdentifier: or_false.3
        TacJumpIfZero: 
          TIdentifier: if_else.0
          TacVariable: 
            TIdentifier: binop.2
        TacReturn: 
          TacVariable: 
            TIdentifier: n.0
        TacJump: 
          TIdentifier: if_false.1
        TacLabel: 
          TIdentifier: if_else.0
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: n.0
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.5
        TacFunCall: 
          TIdentifier: fib
          List[1]: 
            TacVariable: 
              TIdentifier: binop.5
          TacVariable: 
            TIdentifier: call.6
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: n.0
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: binop.7
        TacFunCall: 
          TIdentifier: fib
          List[1]: 
            TacVariable: 
              TIdentifier: binop.7
          TacVariable: 
            TIdentifier: call.8
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: call.6
          TacVariable: 
            TIdentifier: call.8
          TacVariable: 
            TIdentifier: binop.9
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.9
        TacLabel: 
          TIdentifier: if_false.1
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[4]: 
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 6
          TacVariable: 
            TIdentifier: n.1
        TacFunCall: 
          TIdentifier: fib
          List[1]: 
            TacVariable: 
              TIdentifier: n.1
          TacVariable: 
            TIdentifier: call.10
        TacReturn: 
          TacVariable: 
            TIdentifier: call.10
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(13):
  [n.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [fib]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [n.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
