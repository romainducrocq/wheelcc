-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[1]: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[142]: 
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 50
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.14
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.14
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: malloc
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.15
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: call.15
          AsmPseudo: 
            TIdentifier: char_buffer.8
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.9
        AsmLabel: 
          TIdentifier: for_start.3
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 50
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.9
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.16
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.16
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.16
        AsmJmpCC: 
          TIdentifier: break_for.0
          AsmE: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: i.9
          AsmPseudo: 
            TIdentifier: cast.17
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: i.9
          AsmPseudo: 
            TIdentifier: cast.18
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer.8
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.18
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 1
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.19
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.19
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.17
          AsmMemory: 
            TLong: 0
            AsmAx: 
        AsmLabel: 
          TIdentifier: continue_for.0
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.9
          AsmPseudo: 
            TIdentifier: binop.20
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.20
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.20
          AsmPseudo: 
            TIdentifier: i.9
        AsmJmp: 
          TIdentifier: for_start.3
        AsmLabel: 
          TIdentifier: break_for.0
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 100
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.21
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer.8
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.21
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: realloc
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.22
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: call.22
          AsmPseudo: 
            TIdentifier: char_buffer2.10
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 11
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.23
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 75
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.24
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer2.10
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.24
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 1
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.25
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.25
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.23
          AsmMemory: 
            TLong: 0
            AsmAx: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.11
        AsmLabel: 
          TIdentifier: for_start.4
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 50
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.11
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.26
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.26
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.26
        AsmJmpCC: 
          TIdentifier: break_for.1
          AsmE: 
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: i.11
          AsmPseudo: 
            TIdentifier: cast.27
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer2.10
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.27
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 1
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.28
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.28
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          Byte: 
          AsmMemory: 
            TLong: 0
            AsmAx: 
          AsmPseudo: 
            TIdentifier: subscr.29
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: subscr.29
          AsmPseudo: 
            TIdentifier: cast.30
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.11
          AsmPseudo: 
            TIdentifier: cast.30
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.31
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.31
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.31
        AsmJmpCC: 
          TIdentifier: if_false.5
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.5
        AsmLabel: 
          TIdentifier: continue_for.1
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.11
          AsmPseudo: 
            TIdentifier: binop.32
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.32
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.32
          AsmPseudo: 
            TIdentifier: i.11
        AsmJmp: 
          TIdentifier: for_start.4
        AsmLabel: 
          TIdentifier: break_for.1
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 75
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.33
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer2.10
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.33
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 1
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.34
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.34
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          Byte: 
          AsmMemory: 
            TLong: 0
            AsmAx: 
          AsmPseudo: 
            TIdentifier: subscr.35
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: subscr.35
          AsmPseudo: 
            TIdentifier: cast.36
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 11
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.36
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.37
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.37
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.37
        AsmJmpCC: 
          TIdentifier: if_false.6
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.6
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer2.10
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: free
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.38
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.38
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          QuadWord: 
          AsmImm: 
            TULong: 8
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: calloc
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.39
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: call.39
          AsmPseudo: 
            TIdentifier: double_buffer.12
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.13
        AsmLabel: 
          TIdentifier: for_start.7
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.13
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.40
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.40
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.40
        AsmJmpCC: 
          TIdentifier: break_for.2
          AsmE: 
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: i.13
          AsmPseudo: 
            TIdentifier: cast.41
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: double_buffer.12
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.41
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 8
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.42
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.42
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          BackendDouble: 
          AsmMemory: 
            TLong: 0
            AsmAx: 
          AsmPseudo: 
            TIdentifier: subscr.43
        AsmBinary: 
          AsmBitXor: 
          BackendDouble: 
          AsmRegister: 
            AsmXMM0: 
          AsmRegister: 
            AsmXMM0: 
        AsmCmp: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: subscr.43
          AsmRegister: 
            AsmXMM0: 
        AsmJmpCC: 
          TIdentifier: comisd_nan.10
          AsmP: 
        AsmJmpCC: 
          TIdentifier: if_false.8
          AsmE: 
        AsmLabel: 
          TIdentifier: comisd_nan.10
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.8
        AsmLabel: 
          TIdentifier: continue_for.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.13
          AsmPseudo: 
            TIdentifier: binop.44
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.44
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.44
          AsmPseudo: 
            TIdentifier: i.13
        AsmJmp: 
          TIdentifier: for_start.7
        AsmLabel: 
          TIdentifier: break_for.2
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: double_buffer.12
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: free
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 256
            Bool: 0
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.45
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 256
            Bool: 0
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.46
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.45
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.46
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: aligned_alloc
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.47
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: call.47
          AsmPseudo: 
            TIdentifier: char_buffer.8
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer.8
          AsmPseudo: 
            TIdentifier: cast.48
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 256
            Bool: 0
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.49
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.48
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDx: 
        AsmDiv: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.49
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: binop.50
        AsmCmp: 
          QuadWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.50
        AsmJmpCC: 
          TIdentifier: if_false.9
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.9
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: char_buffer.8
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: free
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(49):
  [malloc]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 1
        List[1]: 
          ULong: 
        Pointer: 
          Void: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [realloc]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Pointer: 
            Void: 
          ULong: 
        Pointer: 
          Void: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [calloc]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          ULong: 
          ULong: 
        Pointer: 
          Void: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [aligned_alloc]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          ULong: 
          ULong: 
        Pointer: 
          Void: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [free]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 0
        List[1]: 
          Pointer: 
            Void: 
        Void: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [char_buffer.8]: 
    Symbol: 
      Pointer: 
        Char: 
      LocalAttr: 
  [i.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [char_buffer2.10]: 
    Symbol: 
      Pointer: 
        Char: 
      LocalAttr: 
  [i.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [double_buffer.12]: 
    Symbol: 
      Pointer: 
        Double: 
      LocalAttr: 
  [i.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.14]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [call.15]: 
    Symbol: 
      Pointer: 
        Void: 
      LocalAttr: 
  [binop.16]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.17]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.18]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.19]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.21]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [call.22]: 
    Symbol: 
      Pointer: 
        Void: 
      LocalAttr: 
  [cast.23]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.24]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.25]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.27]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.28]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.29]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.33]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.34]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.35]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.36]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.37]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.38]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [call.39]: 
    Symbol: 
      Pointer: 
        Void: 
      LocalAttr: 
  [binop.40]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.41]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.42]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.43]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.44]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.45]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [cast.46]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [call.47]: 
    Symbol: 
      Pointer: 
        Void: 
      LocalAttr: 
  [cast.48]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [cast.49]: 
    Symbol: 
      ULong: 
      LocalAttr: 
  [binop.50]: 
    Symbol: 
      ULong: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
