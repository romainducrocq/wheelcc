-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[1]: 
    TacStaticVariable: 
      TIdentifier: letter
      Bool: 1
      Int: 
      List[1]: 
        ZeroInit: 
          TLong: 4
  List[3]: 
    TacFunction: 
      TIdentifier: initialize_letter
      Bool: 1
      List[0]: 
      List[2]: 
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 90
          TacVariable: 
            TIdentifier: letter
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: decrement_letter
      Bool: 1
      List[0]: 
      List[3]: 
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.1
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.1
          TacVariable: 
            TIdentifier: letter
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[31]: 
        TacFunCall: 
          TIdentifier: initialize_letter
          List[0]: 
          None: 
        TacLabel: 
          TIdentifier: for_start.3
        TacBinary: 
          TacGreaterOrEqual: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 65
          TacVariable: 
            TIdentifier: binop.2
        TacJumpIfZero: 
          TIdentifier: break_for.0
          TacVariable: 
            TIdentifier: binop.2
        TacFunCall: 
          TIdentifier: putchar
          List[1]: 
            TacVariable: 
              TIdentifier: letter
          TacVariable: 
            TIdentifier: call.3
        TacLabel: 
          TIdentifier: continue_for.0
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.4
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.4
          TacVariable: 
            TIdentifier: letter
        TacJump: 
          TIdentifier: for_start.3
        TacLabel: 
          TIdentifier: break_for.0
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 65
          TacVariable: 
            TIdentifier: letter
        TacLabel: 
          TIdentifier: for_start.4
        TacBinary: 
          TacLessOrEqual: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 90
          TacVariable: 
            TIdentifier: binop.5
        TacJumpIfZero: 
          TIdentifier: break_for.1
          TacVariable: 
            TIdentifier: binop.5
        TacFunCall: 
          TIdentifier: putchar
          List[1]: 
            TacVariable: 
              TIdentifier: letter
          TacVariable: 
            TIdentifier: call.6
        TacLabel: 
          TIdentifier: continue_for.1
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.7
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.7
          TacVariable: 
            TIdentifier: letter
        TacJump: 
          TIdentifier: for_start.4
        TacLabel: 
          TIdentifier: break_for.1
        TacFunCall: 
          TIdentifier: initialize_letter
          List[0]: 
          None: 
        TacLabel: 
          TIdentifier: for_start.5
        TacBinary: 
          TacGreaterOrEqual: 
          TacVariable: 
            TIdentifier: letter
          TacConstant: 
            CConstInt: 
              TInt: 65
          TacVariable: 
            TIdentifier: binop.8
        TacJumpIfZero: 
          TIdentifier: break_for.2
          TacVariable: 
            TIdentifier: binop.8
        TacFunCall: 
          TIdentifier: putchar
          List[1]: 
            TacVariable: 
              TIdentifier: letter
          TacVariable: 
            TIdentifier: call.9
        TacLabel: 
          TIdentifier: continue_for.2
        TacFunCall: 
          TIdentifier: decrement_letter
          List[0]: 
          None: 
        TacJump: 
          TIdentifier: for_start.5
        TacLabel: 
          TIdentifier: break_for.2
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(14):
  [putchar]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [letter]: 
    Symbol: 
      Int: 
      StaticAttr: 
        Bool: 1
        Tentative: 
  [initialize_letter]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Void: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [decrement_letter]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Void: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [binop.1]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
