-- Lexing ... OK
+
+
@@ Tokens @@
List[254]:
  int
  identifier(strcmp)
  (
  char
  *
  identifier(s1)
  ,
  char
  *
  identifier(s2)
  )
  ;
  int
  identifier(puts)
  (
  char
  *
  identifier(s)
  )
  ;
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  struct
  identifier(s)
  {
  int
  identifier(member1)
  ;
  double
  identifier(member2)
  ;
  char
  *
  identifier(member3)
  ;
  }
  ;
  struct
  identifier(s)
  *
  identifier(create_struct)
  (
  int
  identifier(i)
  ,
  double
  identifier(d)
  ,
  char
  *
  identifier(s)
  )
  {
  struct
  identifier(s)
  *
  identifier(ptr)
  =
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(s)
  )
  )
  ;
  identifier(ptr)
  ->
  identifier(member1)
  =
  identifier(i)
  ;
  identifier(ptr)
  ->
  identifier(member2)
  =
  identifier(d)
  ;
  identifier(ptr)
  ->
  identifier(member3)
  =
  identifier(s)
  ;
  return
  identifier(ptr)
  ;
  }
  void
  identifier(increment_struct)
  (
  struct
  identifier(s)
  *
  identifier(ptr)
  )
  {
  identifier(ptr)
  ->
  identifier(member1)
  =
  identifier(ptr)
  ->
  identifier(member1)
  +
  const int(1)
  ;
  identifier(ptr)
  ->
  identifier(member2)
  =
  identifier(ptr)
  ->
  identifier(member2)
  +
  const int(1)
  ;
  identifier(ptr)
  ->
  identifier(member3)
  =
  identifier(ptr)
  ->
  identifier(member3)
  ;
  }
  int
  identifier(check_struct)
  (
  struct
  identifier(s)
  *
  identifier(ptr)
  ,
  int
  identifier(expected_i)
  ,
  double
  identifier(expected_d)
  ,
  char
  *
  identifier(expected_s)
  )
  {
  if
  (
  identifier(ptr)
  ->
  identifier(member1)
  !=
  identifier(expected_i)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(ptr)
  ->
  identifier(member2)
  !=
  identifier(expected_d)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(strcmp)
  (
  identifier(ptr)
  ->
  identifier(member3)
  ,
  identifier(expected_s)
  )
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  void
  identifier(print_struct_msg)
  (
  struct
  identifier(s)
  *
  identifier(ptr)
  )
  {
  identifier(puts)
  (
  identifier(ptr)
  ->
  identifier(member3)
  )
  ;
  }
  static
  struct
  identifier(s)
  identifier(internal)
  =
  {
  const int(1)
  ,
  const double(2.0)
  ,
  string literal("static struct")
  }
  ;
  struct
  identifier(s)
  *
  identifier(get_internal_struct)
  (
  void
  )
  {
  return
  &
  identifier(internal)
  ;
  }
  struct
  identifier(s)
  identifier(incomplete_var)
  =
  {
  const int(3)
  ,
  const double(4.0)
  ,
  string literal("global struct")
  }
  ;
