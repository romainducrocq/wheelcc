-- Lexing ... OK
+
+
@@ Tokens @@
List[884]:
  void
  *
  identifier(calloc)
  (
  unsigned
  long
  identifier(nmemb)
  ,
  unsigned
  long
  identifier(size)
  )
  ;
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  struct
  identifier(inner)
  {
  double
  identifier(d)
  ;
  int
  identifier(i)
  ;
  }
  ;
  struct
  identifier(outer)
  {
  char
  identifier(a)
  ;
  char
  identifier(b)
  ;
  struct
  identifier(inner)
  identifier(substruct)
  ;
  }
  ;
  struct
  identifier(outermost)
  {
  int
  identifier(i)
  ;
  struct
  identifier(outer)
  *
  identifier(nested_ptr)
  ;
  struct
  identifier(outer)
  identifier(nested_struct)
  ;
  }
  ;
  int
  identifier(test_copy_from_member_pointer)
  (
  void
  )
  {
  struct
  identifier(inner)
  identifier(small)
  =
  {
  const double(0.0)
  ,
  const int(0)
  }
  ;
  struct
  identifier(outer)
  *
  identifier(outer_ptr)
  =
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(outer)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(a)
  =
  const int(100)
  ;
  identifier(outer_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  =
  const double(21.5)
  ;
  identifier(outer_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  =
  const int(100001)
  ;
  identifier(small)
  =
  identifier(outer_ptr)
  ->
  identifier(substruct)
  ;
  if
  (
  identifier(small)
  .
  identifier(d)
  !=
  const double(21.5)
  ||
  identifier(small)
  .
  identifier(i)
  !=
  const int(100001)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_copy_to_member_pointer)
  (
  void
  )
  {
  struct
  identifier(inner)
  identifier(small)
  =
  {
  const double(99.25)
  ,
  const int(987654)
  }
  ;
  struct
  identifier(outer)
  *
  identifier(outer_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outer)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(substruct)
  =
  identifier(small)
  ;
  if
  (
  identifier(outer_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  !=
  const double(99.25)
  ||
  identifier(outer_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  !=
  const int(987654)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(outer_ptr)
  ->
  identifier(a)
  ||
  identifier(outer_ptr)
  ->
  identifier(b)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_copy_from_nested_member_pointer)
  (
  void
  )
  {
  struct
  identifier(inner)
  identifier(small)
  =
  {
  const double(99.25)
  ,
  const int(987654)
  }
  ;
  struct
  identifier(outermost)
  *
  identifier(outer_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outermost)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outer)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(i)
  =
  -
  const int(5)
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(a)
  =
  const int(101)
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(b)
  =
  const int(102)
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  =
  const double(77.5)
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  =
  const int(88)
  ;
  identifier(small)
  =
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  ;
  if
  (
  identifier(small)
  .
  identifier(d)
  !=
  const double(77.5)
  ||
  identifier(small)
  .
  identifier(i)
  !=
  const int(88)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(outer_ptr)
  ->
  identifier(i)
  !=
  -
  const int(5)
  ||
  identifier(outer_ptr)
  ->
  identifier(nested_struct)
  .
  identifier(a)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_copy_to_nested_member_pointer)
  (
  void
  )
  {
  struct
  identifier(inner)
  identifier(small)
  =
  {
  const double(99.25)
  ,
  const int(987654)
  }
  ;
  struct
  identifier(outermost)
  *
  identifier(outer_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outermost)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outer)
  )
  )
  ;
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  =
  identifier(small)
  ;
  if
  (
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  !=
  const double(99.25)
  ||
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  !=
  const int(987654)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(a)
  ||
  identifier(outer_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(b)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_mixed_nested_access)
  (
  void
  )
  {
  struct
  identifier(outermost)
  identifier(s1)
  =
  {
  const int(100)
  ,
  const int(0)
  ,
  {
  const int(0)
  ,
  const int(0)
  ,
  {
  const int(0)
  ,
  const int(0)
  }
  }
  }
  ;
  struct
  identifier(outermost)
  *
  identifier(s2_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outermost)
  )
  )
  ;
  identifier(s1)
  .
  identifier(i)
  =
  const int(2147483647)
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outermost)
  )
  )
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(a)
  =
  const int(125)
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(b)
  =
  const int(126)
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  =
  -
  const double(50.)
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  =
  -
  const int(70)
  ;
  identifier(s1)
  .
  identifier(nested_struct)
  .
  identifier(a)
  =
  const int(101)
  ;
  identifier(s1)
  .
  identifier(nested_struct)
  .
  identifier(b)
  =
  const int(102)
  ;
  identifier(s2_ptr)
  ->
  identifier(i)
  =
  -
  const int(2147483647)
  ;
  identifier(s2_ptr)
  ->
  identifier(nested_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outermost)
  )
  )
  ;
  identifier(s2_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(a)
  =
  const int(5)
  ;
  identifier(s2_ptr)
  ->
  identifier(nested_ptr)
  ->
  identifier(b)
  =
  const int(6)
  ;
  identifier(s2_ptr)
  ->
  identifier(nested_struct)
  .
  identifier(substruct)
  .
  identifier(d)
  =
  const double(8.e8)
  ;
  identifier(s2_ptr)
  ->
  identifier(nested_struct)
  .
  identifier(substruct)
  .
  identifier(i)
  =
  -
  const int(5)
  ;
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(substruct)
  =
  identifier(s2_ptr)
  ->
  identifier(nested_struct)
  .
  identifier(substruct)
  ;
  if
  (
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(d)
  !=
  const double(8.e8)
  ||
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(substruct)
  .
  identifier(i)
  !=
  -
  const int(5)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(a)
  !=
  const int(125)
  ||
  identifier(s1)
  .
  identifier(nested_ptr)
  ->
  identifier(b)
  !=
  const int(126)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_member_from_cast)
  (
  void
  )
  {
  struct
  identifier(inner)
  identifier(small)
  =
  {
  const double(20.0)
  ,
  const int(10)
  }
  ;
  void
  *
  identifier(outer_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  struct
  identifier(outer)
  )
  )
  ;
  (
  (
  struct
  identifier(outer)
  *
  )
  identifier(outer_ptr)
  )
  ->
  identifier(substruct)
  =
  identifier(small)
  ;
  if
  (
  (
  (
  struct
  identifier(outer)
  *
  )
  identifier(outer_ptr)
  )
  ->
  identifier(substruct)
  .
  identifier(d)
  !=
  const double(20.0)
  ||
  (
  (
  struct
  identifier(outer)
  *
  )
  identifier(outer_ptr)
  )
  ->
  identifier(substruct)
  .
  identifier(i)
  !=
  const int(10)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  if
  (
  !
  identifier(test_copy_from_member_pointer)
  (
  )
  )
  {
  return
  const int(1)
  ;
  }
  if
  (
  !
  identifier(test_copy_to_member_pointer)
  (
  )
  )
  {
  return
  const int(2)
  ;
  }
  if
  (
  !
  identifier(test_copy_from_nested_member_pointer)
  (
  )
  )
  {
  return
  const int(3)
  ;
  }
  if
  (
  !
  identifier(test_copy_to_nested_member_pointer)
  (
  )
  )
  {
  return
  const int(4)
  ;
  }
  if
  (
  !
  identifier(test_mixed_nested_access)
  (
  )
  )
  {
  return
  const int(5)
  ;
  }
  if
  (
  !
  identifier(test_member_from_cast)
  (
  )
  )
  {
  return
  const int(6)
  ;
  }
  return
  const int(0)
  ;
  }
