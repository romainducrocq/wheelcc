-- Lexing ... OK
+
+
@@ Tokens @@
List[524]:
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  int
  identifier(putchar)
  (
  int
  identifier(ch)
  )
  ;
  int
  identifier(puts)
  (
  char
  *
  identifier(s)
  )
  ;
  void
  identifier(test_static_local)
  (
  int
  identifier(a)
  ,
  int
  identifier(b)
  )
  {
  struct
  identifier(s)
  {
  int
  identifier(a)
  ;
  int
  identifier(b)
  ;
  }
  ;
  static
  struct
  identifier(s)
  identifier(static_struct)
  ;
  if
  (
  !
  (
  identifier(static_struct)
  .
  identifier(a)
  ||
  identifier(static_struct)
  .
  identifier(b)
  )
  )
  {
  identifier(puts)
  (
  string literal("zero")
  )
  ;
  }
  else
  {
  identifier(putchar)
  (
  identifier(static_struct)
  .
  identifier(a)
  )
  ;
  identifier(putchar)
  (
  identifier(static_struct)
  .
  identifier(b)
  )
  ;
  identifier(putchar)
  (
  const char('\n')
  )
  ;
  }
  identifier(static_struct)
  .
  identifier(a)
  =
  identifier(a)
  ;
  identifier(static_struct)
  .
  identifier(b)
  =
  identifier(b)
  ;
  }
  void
  identifier(test_static_local_pointer)
  (
  int
  identifier(a)
  ,
  int
  identifier(b)
  )
  {
  struct
  identifier(s)
  {
  int
  identifier(a)
  ;
  int
  identifier(b)
  ;
  }
  ;
  static
  struct
  identifier(s)
  *
  identifier(struct_ptr)
  ;
  if
  (
  !
  identifier(struct_ptr)
  )
  {
  identifier(struct_ptr)
  =
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(s)
  )
  )
  ;
  }
  else
  {
  identifier(putchar)
  (
  identifier(struct_ptr)
  ->
  identifier(a)
  )
  ;
  identifier(putchar)
  (
  identifier(struct_ptr)
  ->
  identifier(b)
  )
  ;
  identifier(putchar)
  (
  const char('\n')
  )
  ;
  }
  identifier(struct_ptr)
  ->
  identifier(a)
  =
  identifier(a)
  ;
  identifier(struct_ptr)
  ->
  identifier(b)
  =
  identifier(b)
  ;
  }
  struct
  identifier(global)
  {
  char
  identifier(x)
  ;
  char
  identifier(y)
  ;
  char
  identifier(z)
  ;
  }
  ;
  struct
  identifier(global)
  identifier(g)
  ;
  void
  identifier(f1)
  (
  void
  )
  {
  identifier(g)
  .
  identifier(x)
  =
  identifier(g)
  .
  identifier(x)
  +
  const int(1)
  ;
  identifier(g)
  .
  identifier(y)
  =
  identifier(g)
  .
  identifier(y)
  +
  const int(1)
  ;
  identifier(g)
  .
  identifier(z)
  =
  identifier(g)
  .
  identifier(z)
  +
  const int(1)
  ;
  }
  void
  identifier(f2)
  (
  void
  )
  {
  identifier(putchar)
  (
  identifier(g)
  .
  identifier(x)
  )
  ;
  identifier(putchar)
  (
  identifier(g)
  .
  identifier(y)
  )
  ;
  identifier(putchar)
  (
  identifier(g)
  .
  identifier(z)
  )
  ;
  identifier(putchar)
  (
  const char('\n')
  )
  ;
  }
  void
  identifier(test_global_struct)
  (
  void
  )
  {
  identifier(g)
  .
  identifier(x)
  =
  const char('A')
  ;
  identifier(g)
  .
  identifier(y)
  =
  const char('B')
  ;
  identifier(g)
  .
  identifier(z)
  =
  const char('C')
  ;
  identifier(f1)
  (
  )
  ;
  identifier(f2)
  (
  )
  ;
  identifier(f1)
  (
  )
  ;
  identifier(f2)
  (
  )
  ;
  }
  struct
  identifier(global)
  *
  identifier(g_ptr)
  ;
  void
  identifier(f3)
  (
  void
  )
  {
  identifier(g_ptr)
  ->
  identifier(x)
  =
  identifier(g_ptr)
  ->
  identifier(x)
  +
  const int(1)
  ;
  identifier(g_ptr)
  ->
  identifier(y)
  =
  identifier(g_ptr)
  ->
  identifier(y)
  +
  const int(1)
  ;
  identifier(g_ptr)
  ->
  identifier(z)
  =
  identifier(g_ptr)
  ->
  identifier(z)
  +
  const int(1)
  ;
  }
  void
  identifier(f4)
  (
  void
  )
  {
  identifier(putchar)
  (
  identifier(g_ptr)
  ->
  identifier(x)
  )
  ;
  identifier(putchar)
  (
  identifier(g_ptr)
  ->
  identifier(y)
  )
  ;
  identifier(putchar)
  (
  identifier(g_ptr)
  ->
  identifier(z)
  )
  ;
  identifier(putchar)
  (
  const char('\n')
  )
  ;
  }
  void
  identifier(test_global_struct_pointer)
  (
  void
  )
  {
  identifier(g_ptr)
  =
  &
  identifier(g)
  ;
  identifier(f3)
  (
  )
  ;
  identifier(f4)
  (
  )
  ;
  identifier(f3)
  (
  )
  ;
  identifier(f4)
  (
  )
  ;
  identifier(g_ptr)
  =
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(global)
  )
  )
  ;
  identifier(g_ptr)
  ->
  identifier(x)
  =
  const char('a')
  ;
  identifier(g_ptr)
  ->
  identifier(y)
  =
  const char('b')
  ;
  identifier(g_ptr)
  ->
  identifier(z)
  =
  const char('c')
  ;
  identifier(f3)
  (
  )
  ;
  identifier(f4)
  (
  )
  ;
  identifier(f3)
  (
  )
  ;
  identifier(f4)
  (
  )
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  identifier(test_static_local)
  (
  const char('m')
  ,
  const char('n')
  )
  ;
  identifier(test_static_local)
  (
  const char('o')
  ,
  const char('p')
  )
  ;
  identifier(test_static_local)
  (
  const char('!')
  ,
  const char('!')
  )
  ;
  ;
  identifier(test_static_local_pointer)
  (
  const char('w')
  ,
  const char('x')
  )
  ;
  identifier(test_static_local_pointer)
  (
  const char('y')
  ,
  const char('z')
  )
  ;
  identifier(test_static_local_pointer)
  (
  const char('!')
  ,
  const char('!')
  )
  ;
  ;
  identifier(test_global_struct)
  (
  )
  ;
  identifier(test_global_struct_pointer)
  (
  )
  ;
  return
  const int(0)
  ;
  }
