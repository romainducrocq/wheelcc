-- Lexing ... OK
+
+
@@ Tokens @@
List[228]:
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  struct
  identifier(linked_list_node)
  {
  int
  identifier(val)
  ;
  struct
  identifier(linked_list_node)
  *
  identifier(next)
  ;
  }
  ;
  struct
  identifier(linked_list_node)
  *
  identifier(array_to_list)
  (
  int
  *
  identifier(array)
  ,
  int
  identifier(count)
  )
  {
  struct
  identifier(linked_list_node)
  *
  identifier(head)
  =
  (
  struct
  identifier(linked_list_node)
  *
  )
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(linked_list_node)
  )
  )
  ;
  identifier(head)
  ->
  identifier(val)
  =
  identifier(array)
  [
  const int(0)
  ]
  ;
  identifier(head)
  ->
  identifier(next)
  =
  const int(0)
  ;
  struct
  identifier(linked_list_node)
  *
  identifier(current)
  =
  identifier(head)
  ;
  for
  (
  int
  identifier(i)
  =
  const int(1)
  ;
  identifier(i)
  <
  identifier(count)
  ;
  identifier(i)
  =
  identifier(i)
  +
  const int(1)
  )
  {
  identifier(current)
  ->
  identifier(next)
  =
  (
  struct
  identifier(linked_list_node)
  *
  )
  identifier(malloc)
  (
  sizeof
  (
  struct
  identifier(linked_list_node)
  )
  )
  ;
  identifier(current)
  ->
  identifier(next)
  ->
  identifier(next)
  =
  const int(0)
  ;
  identifier(current)
  ->
  identifier(next)
  ->
  identifier(val)
  =
  identifier(array)
  [
  identifier(i)
  ]
  ;
  identifier(current)
  =
  identifier(current)
  ->
  identifier(next)
  ;
  }
  return
  identifier(head)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  int
  identifier(arr)
  [
  const int(4)
  ]
  =
  {
  const int(9)
  ,
  const int(8)
  ,
  const int(7)
  ,
  const int(6)
  }
  ;
  struct
  identifier(linked_list_node)
  *
  identifier(elem)
  =
  identifier(array_to_list)
  (
  identifier(arr)
  ,
  const int(4)
  )
  ;
  for
  (
  int
  identifier(i)
  =
  const int(0)
  ;
  identifier(i)
  <
  const int(4)
  ;
  identifier(i)
  =
  identifier(i)
  +
  const int(1)
  )
  {
  int
  identifier(expected)
  =
  identifier(arr)
  [
  identifier(i)
  ]
  ;
  if
  (
  identifier(elem)
  ->
  identifier(val)
  !=
  identifier(expected)
  )
  {
  return
  identifier(i)
  +
  const int(1)
  ;
  }
  identifier(elem)
  =
  identifier(elem)
  ->
  identifier(next)
  ;
  }
  return
  const int(0)
  ;
  }
