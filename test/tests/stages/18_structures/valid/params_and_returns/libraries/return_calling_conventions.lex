-- Lexing ... OK
+
+
@@ Tokens @@
List[641]:
  int
  identifier(strcmp)
  (
  char
  *
  identifier(s1)
  ,
  char
  *
  identifier(s2)
  )
  ;
  int
  identifier(strncmp)
  (
  char
  *
  identifier(s1)
  ,
  char
  *
  identifier(s2)
  ,
  unsigned
  long
  identifier(n)
  )
  ;
  struct
  identifier(one_int)
  {
  int
  identifier(i)
  ;
  char
  identifier(c)
  ;
  }
  ;
  struct
  identifier(one_int_exactly)
  {
  unsigned
  long
  identifier(l)
  ;
  }
  ;
  struct
  identifier(two_ints)
  {
  char
  identifier(c)
  ;
  int
  identifier(arr)
  [
  const int(3)
  ]
  ;
  }
  ;
  struct
  identifier(two_ints_nested)
  {
  struct
  identifier(one_int)
  identifier(a)
  ;
  struct
  identifier(one_int)
  identifier(b)
  ;
  }
  ;
  struct
  identifier(twelve_bytes)
  {
  int
  identifier(i)
  ;
  char
  identifier(arr)
  [
  const int(8)
  ]
  ;
  }
  ;
  struct
  identifier(one_xmm)
  {
  double
  identifier(d)
  ;
  }
  ;
  struct
  identifier(two_xmm)
  {
  double
  identifier(d)
  [
  const int(2)
  ]
  ;
  }
  ;
  struct
  identifier(int_and_xmm)
  {
  char
  identifier(c)
  ;
  double
  identifier(d)
  ;
  }
  ;
  struct
  identifier(xmm_and_int)
  {
  struct
  identifier(one_xmm)
  identifier(dbl)
  ;
  char
  identifier(c)
  [
  const int(3)
  ]
  ;
  }
  ;
  struct
  identifier(odd_size)
  {
  char
  identifier(arr)
  [
  const int(5)
  ]
  ;
  }
  ;
  struct
  identifier(memory)
  {
  double
  identifier(d)
  ;
  char
  identifier(c)
  [
  const int(3)
  ]
  ;
  long
  identifier(l)
  ;
  int
  identifier(i)
  ;
  }
  ;
  struct
  identifier(one_int)
  identifier(return_int_struct)
  (
  void
  )
  ;
  struct
  identifier(twelve_bytes)
  identifier(return_two_int_struct)
  (
  void
  )
  ;
  struct
  identifier(one_xmm)
  identifier(return_double_struct)
  (
  void
  )
  ;
  struct
  identifier(two_xmm)
  identifier(return_two_double_struct)
  (
  void
  )
  ;
  struct
  identifier(xmm_and_int)
  identifier(return_mixed)
  (
  void
  )
  ;
  struct
  identifier(int_and_xmm)
  identifier(return_mixed2)
  (
  void
  )
  ;
  struct
  identifier(memory)
  identifier(return_on_stack)
  (
  void
  )
  ;
  struct
  identifier(memory)
  identifier(pass_and_return_regs)
  (
  int
  identifier(i)
  ,
  double
  identifier(d)
  ,
  struct
  identifier(int_and_xmm)
  identifier(strct)
  ,
  int
  identifier(c)
  ,
  struct
  identifier(two_ints)
  identifier(t_i)
  ,
  long
  identifier(l)
  ,
  struct
  identifier(one_int_exactly)
  identifier(o_i_e)
  ,
  int
  identifier(c2)
  )
  ;
  struct
  identifier(one_int)
  identifier(return_int_struct)
  (
  void
  )
  {
  struct
  identifier(one_int)
  identifier(retval)
  =
  {
  const int(1)
  ,
  const int(2)
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(twelve_bytes)
  identifier(return_two_int_struct)
  (
  void
  )
  {
  struct
  identifier(twelve_bytes)
  identifier(retval)
  =
  {
  const int(10)
  ,
  string literal("12345678")
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(one_xmm)
  identifier(return_double_struct)
  (
  void
  )
  {
  struct
  identifier(one_xmm)
  identifier(retval)
  =
  {
  const double(100.625)
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(two_xmm)
  identifier(return_two_double_struct)
  (
  void
  )
  {
  struct
  identifier(two_xmm)
  identifier(retval)
  =
  {
  {
  const double(8.8)
  ,
  const double(7.8)
  }
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(xmm_and_int)
  identifier(return_mixed)
  (
  void
  )
  {
  struct
  identifier(xmm_and_int)
  identifier(retval)
  =
  {
  {
  const double(10.0)
  }
  ,
  string literal("ab")
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(int_and_xmm)
  identifier(return_mixed2)
  (
  void
  )
  {
  struct
  identifier(int_and_xmm)
  identifier(retval)
  =
  {
  const int(127)
  ,
  const double(34e43)
  }
  ;
  return
  identifier(retval)
  ;
  }
  struct
  identifier(memory)
  identifier(return_on_stack)
  (
  void
  )
  {
  struct
  identifier(memory)
  identifier(retval)
  =
  {
  const double(1.25)
  ,
  string literal("xy")
  ,
  const long(100l)
  ,
  const int(44)
  }
  ;
  return
  identifier(retval)
  ;
  }
  int
  identifier(leaf_call)
  (
  struct
  identifier(two_ints)
  identifier(t_i)
  ,
  int
  identifier(c)
  ,
  double
  identifier(d)
  )
  {
  if
  (
  identifier(t_i)
  .
  identifier(c)
  !=
  const char('_')
  ||
  identifier(t_i)
  .
  identifier(arr)
  [
  const int(0)
  ]
  !=
  const int(5)
  ||
  identifier(t_i)
  .
  identifier(arr)
  [
  const int(1)
  ]
  !=
  const int(6)
  ||
  identifier(t_i)
  .
  identifier(arr)
  [
  const int(2)
  ]
  !=
  const int(7)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(c)
  !=
  const char('p')
  ||
  identifier(d)
  !=
  const double(4.56)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  struct
  identifier(memory)
  identifier(pass_and_return_regs)
  (
  int
  identifier(i)
  ,
  double
  identifier(d)
  ,
  struct
  identifier(int_and_xmm)
  identifier(strct)
  ,
  int
  identifier(c)
  ,
  struct
  identifier(two_ints)
  identifier(t_i)
  ,
  long
  identifier(l)
  ,
  struct
  identifier(one_int_exactly)
  identifier(o_i_e)
  ,
  int
  identifier(c2)
  )
  {
  char
  identifier(stackbytes)
  [
  const int(8)
  ]
  =
  string literal("zyxwvut")
  ;
  struct
  identifier(memory)
  identifier(retval)
  =
  {
  const int(0)
  ,
  {
  const int(0)
  ,
  const int(0)
  ,
  const int(0)
  }
  ,
  const int(0)
  ,
  const int(0)
  }
  ;
  if
  (
  !
  identifier(leaf_call)
  (
  identifier(t_i)
  ,
  identifier(strct)
  .
  identifier(c)
  ,
  identifier(strct)
  .
  identifier(d)
  )
  )
  {
  identifier(retval)
  .
  identifier(i)
  =
  const int(1)
  ;
  return
  identifier(retval)
  ;
  }
  if
  (
  identifier(i)
  !=
  const int(6)
  ||
  identifier(d)
  !=
  const double(4.0)
  ||
  identifier(c)
  !=
  const int(5)
  ||
  identifier(l)
  !=
  const int(77)
  ||
  identifier(c2)
  !=
  const int(99)
  )
  {
  identifier(retval)
  .
  identifier(i)
  =
  const int(2)
  ;
  return
  identifier(retval)
  ;
  }
  if
  (
  identifier(o_i_e)
  .
  identifier(l)
  !=
  const int(567890)
  )
  {
  identifier(retval)
  .
  identifier(i)
  =
  const int(3)
  ;
  return
  identifier(retval)
  ;
  }
  if
  (
  identifier(strcmp)
  (
  identifier(stackbytes)
  ,
  string literal("zyxwvut")
  )
  )
  {
  identifier(retval)
  .
  identifier(i)
  =
  const int(4)
  ;
  return
  identifier(retval)
  ;
  }
  identifier(retval)
  .
  identifier(l)
  =
  const int(100)
  ;
  return
  identifier(retval)
  ;
  }
