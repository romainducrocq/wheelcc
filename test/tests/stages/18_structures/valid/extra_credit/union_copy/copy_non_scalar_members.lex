-- Lexing ... OK
+
+
@@ Tokens @@
List[460]:
  void
  *
  identifier(calloc)
  (
  unsigned
  long
  identifier(nmemb)
  ,
  unsigned
  long
  identifier(size)
  )
  ;
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  union
  identifier(simple)
  {
  int
  identifier(i)
  ;
  long
  identifier(l)
  ;
  char
  identifier(c)
  ;
  unsigned
  char
  identifier(uc_arr)
  [
  const int(3)
  ]
  ;
  }
  ;
  union
  identifier(has_union)
  {
  double
  identifier(d)
  ;
  union
  identifier(simple)
  identifier(u)
  ;
  union
  identifier(simple)
  *
  identifier(u_ptr)
  ;
  }
  ;
  struct
  identifier(simple_struct)
  {
  long
  identifier(l)
  ;
  double
  identifier(d)
  ;
  unsigned
  int
  identifier(u)
  ;
  }
  ;
  union
  identifier(has_struct)
  {
  long
  identifier(l)
  ;
  struct
  identifier(simple_struct)
  identifier(s)
  ;
  }
  ;
  struct
  identifier(struct_with_union)
  {
  union
  identifier(simple)
  identifier(u)
  ;
  unsigned
  long
  identifier(ul)
  ;
  }
  ;
  union
  identifier(complex_union)
  {
  double
  identifier(d_arr)
  [
  const int(2)
  ]
  ;
  struct
  identifier(struct_with_union)
  identifier(s)
  ;
  union
  identifier(has_union)
  *
  identifier(u_ptr)
  ;
  }
  ;
  void
  *
  identifier(calloc)
  (
  unsigned
  long
  identifier(nmemb)
  ,
  unsigned
  long
  identifier(size)
  )
  ;
  int
  identifier(test_dot)
  (
  void
  )
  {
  struct
  identifier(struct_with_union)
  identifier(my_struct)
  =
  {
  {
  const int(0)
  }
  ,
  const long(100000l)
  }
  ;
  union
  identifier(simple)
  identifier(my_simple_union)
  ;
  identifier(my_simple_union)
  .
  identifier(l)
  =
  -
  const int(1)
  ;
  identifier(my_struct)
  .
  identifier(u)
  =
  identifier(my_simple_union)
  ;
  static
  union
  identifier(complex_union)
  identifier(my_union)
  ;
  identifier(my_union)
  .
  identifier(s)
  =
  identifier(my_struct)
  ;
  if
  (
  identifier(my_struct)
  .
  identifier(ul)
  !=
  const long(100000l)
  ||
  identifier(my_struct)
  .
  identifier(u)
  .
  identifier(l)
  !=
  -
  const int(1)
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(my_union)
  .
  identifier(s)
  .
  identifier(ul)
  !=
  const long(100000l)
  )
  {
  return
  const int(0)
  ;
  }
  identifier(my_union)
  .
  identifier(s)
  .
  identifier(u)
  .
  identifier(i)
  =
  const int(45)
  ;
  identifier(my_simple_union)
  =
  identifier(my_union)
  .
  identifier(s)
  .
  identifier(u)
  ;
  if
  (
  identifier(my_simple_union)
  .
  identifier(i)
  !=
  const int(45)
  )
  {
  return
  const int(0)
  ;
  }
  static
  struct
  identifier(struct_with_union)
  identifier(another_struct)
  ;
  identifier(another_struct)
  =
  identifier(my_union)
  .
  identifier(s)
  ;
  if
  (
  identifier(another_struct)
  .
  identifier(ul)
  !=
  const long(100000l)
  ||
  identifier(another_struct)
  .
  identifier(u)
  .
  identifier(i)
  !=
  const int(45)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_arrow)
  (
  void
  )
  {
  union
  identifier(complex_union)
  *
  identifier(my_union_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  union
  identifier(complex_union)
  )
  )
  ;
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  union
  identifier(has_union)
  )
  )
  ;
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u_ptr)
  =
  identifier(calloc)
  (
  const int(1)
  ,
  sizeof
  (
  union
  identifier(simple)
  )
  )
  ;
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(i)
  =
  const int(987654321)
  ;
  union
  identifier(has_union)
  identifier(another_union)
  =
  *
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ;
  if
  (
  identifier(another_union)
  .
  identifier(u_ptr)
  !=
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u_ptr)
  ||
  identifier(another_union)
  .
  identifier(u_ptr)
  ->
  identifier(c)
  !=
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(c)
  )
  {
  return
  const int(0)
  ;
  }
  union
  identifier(simple)
  identifier(small_union)
  =
  {
  -
  const int(9999)
  }
  ;
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u)
  =
  identifier(small_union)
  ;
  if
  (
  identifier(my_union_ptr)
  ->
  identifier(u_ptr)
  ->
  identifier(u)
  .
  identifier(i)
  !=
  -
  const int(9999)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  if
  (
  !
  identifier(test_dot)
  (
  )
  )
  {
  return
  const int(1)
  ;
  }
  if
  (
  !
  identifier(test_arrow)
  (
  )
  )
  {
  return
  const int(2)
  ;
  }
  return
  const int(0)
  ;
  }
