-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[2]: 
    AsmFunction: 
      TIdentifier: choose_union
      Bool: 1
      Bool: 0
      List[19]: 
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: flag.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.3
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.3
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: unop.3
          AsmPseudo: 
            TIdentifier: cast.4
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.4
          AsmPseudoMem: 
            TIdentifier: one.1
            TLong: 0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 100
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudoMem: 
            TIdentifier: two.2
            TLong: 0
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: flag.0
        AsmJmpCC: 
          TIdentifier: ternary_else.0
          AsmE: 
        AsmMov: 
          QuadWord: 
          AsmPseudoMem: 
            TIdentifier: one.1
            TLong: 0
          AsmPseudoMem: 
            TIdentifier: ternop.5
            TLong: 0
        AsmJmp: 
          TIdentifier: ternary_false.1
        AsmLabel: 
          TIdentifier: ternary_else.0
        AsmMov: 
          QuadWord: 
          AsmPseudoMem: 
            TIdentifier: two.2
            TLong: 0
          AsmPseudoMem: 
            TIdentifier: ternop.5
            TLong: 0
        AsmLabel: 
          TIdentifier: ternary_false.1
        AsmMov: 
          Byte: 
          AsmPseudoMem: 
            TIdentifier: ternop.5
            TLong: 0
          AsmPseudo: 
            TIdentifier: smem.6
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: smem.6
          AsmPseudo: 
            TIdentifier: cast.7
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.7
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[28]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: choose_union
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.8
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.9
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.9
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.9
          AsmPseudo: 
            TIdentifier: call.8
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.10
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.10
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.10
        AsmJmpCC: 
          TIdentifier: if_false.2
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.2
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: choose_union
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.11
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 100
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.11
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.12
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.12
        AsmJmpCC: 
          TIdentifier: if_false.3
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.3
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(1):
  [u.0]: 
    StructTypedef: 
      TInt: 8
      TLong: 8
      List[3]: 
        TIdentifier: l
        TIdentifier: i
        TIdentifier: c
      Dict[3]: 
        [l]: 
          StructMember: 
            TLong: 0
            Long: 
        [i]: 
          StructMember: 
            TLong: 0
            Int: 
        [c]: 
          StructMember: 
            TLong: 0
            Char: 
+
+
@@ Symbol Table @@
Dict(15):
  [flag.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [choose_union]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 1
        List[1]: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [one.1]: 
    Symbol: 
      Structure: 
        TIdentifier: u.0
        Bool: 1
      LocalAttr: 
  [two.2]: 
    Symbol: 
      Structure: 
        TIdentifier: u.0
        Bool: 1
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [unop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [ternop.5]: 
    Symbol: 
      Structure: 
        TIdentifier: u.0
        Bool: 1
      LocalAttr: 
  [smem.6]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.8]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
