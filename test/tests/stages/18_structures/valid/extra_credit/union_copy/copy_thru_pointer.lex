-- Lexing ... OK
+
+
@@ Tokens @@
List[492]:
  void
  *
  identifier(calloc)
  (
  unsigned
  long
  identifier(nmemb)
  ,
  unsigned
  long
  identifier(size)
  )
  ;
  void
  *
  identifier(malloc)
  (
  unsigned
  long
  identifier(size)
  )
  ;
  union
  identifier(simple)
  {
  int
  identifier(i)
  ;
  long
  identifier(l)
  ;
  char
  identifier(c)
  ;
  unsigned
  char
  identifier(uc_arr)
  [
  const int(3)
  ]
  ;
  }
  ;
  union
  identifier(has_union)
  {
  double
  identifier(d)
  ;
  union
  identifier(simple)
  identifier(u)
  ;
  union
  identifier(simple)
  *
  identifier(u_ptr)
  ;
  }
  ;
  struct
  identifier(simple_struct)
  {
  long
  identifier(l)
  ;
  double
  identifier(d)
  ;
  unsigned
  int
  identifier(u)
  ;
  }
  ;
  union
  identifier(has_struct)
  {
  long
  identifier(l)
  ;
  struct
  identifier(simple_struct)
  identifier(s)
  ;
  }
  ;
  struct
  identifier(struct_with_union)
  {
  union
  identifier(simple)
  identifier(u)
  ;
  unsigned
  long
  identifier(ul)
  ;
  }
  ;
  union
  identifier(complex_union)
  {
  double
  identifier(d_arr)
  [
  const int(2)
  ]
  ;
  struct
  identifier(struct_with_union)
  identifier(s)
  ;
  union
  identifier(has_union)
  *
  identifier(u_ptr)
  ;
  }
  ;
  int
  identifier(strcmp)
  (
  char
  *
  identifier(s1)
  ,
  char
  *
  identifier(s2)
  )
  ;
  int
  identifier(test_copy_to_pointer)
  (
  void
  )
  {
  union
  identifier(simple)
  identifier(y)
  ;
  identifier(y)
  .
  identifier(l)
  =
  -
  const int(20)
  ;
  union
  identifier(simple)
  *
  identifier(x)
  =
  identifier(malloc)
  (
  sizeof
  (
  union
  identifier(simple)
  )
  )
  ;
  *
  identifier(x)
  =
  identifier(y)
  ;
  if
  (
  identifier(x)
  ->
  identifier(l)
  !=
  -
  const int(20)
  ||
  identifier(x)
  ->
  identifier(i)
  !=
  -
  const int(20)
  ||
  identifier(x)
  ->
  identifier(uc_arr)
  [
  const int(0)
  ]
  !=
  const int(236)
  ||
  identifier(x)
  ->
  identifier(uc_arr)
  [
  const int(1)
  ]
  !=
  const int(255)
  ||
  identifier(x)
  ->
  identifier(uc_arr)
  [
  const int(2)
  ]
  !=
  const int(255)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(test_copy_from_pointer)
  (
  void
  )
  {
  struct
  identifier(simple_struct)
  identifier(my_struct)
  =
  {
  const long(8223372036854775807l)
  ,
  const double(20e3)
  ,
  const unsigned int(2147483650u)
  }
  ;
  static
  union
  identifier(has_struct)
  identifier(my_union)
  ;
  identifier(my_union)
  .
  identifier(s)
  =
  identifier(my_struct)
  ;
  union
  identifier(has_struct)
  *
  identifier(union_ptr)
  ;
  identifier(union_ptr)
  =
  &
  identifier(my_union)
  ;
  union
  identifier(has_struct)
  identifier(another_union)
  =
  *
  identifier(union_ptr)
  ;
  if
  (
  identifier(another_union)
  .
  identifier(s)
  .
  identifier(l)
  !=
  const long(8223372036854775807l)
  ||
  identifier(another_union)
  .
  identifier(s)
  .
  identifier(d)
  !=
  const double(20e3)
  ||
  identifier(another_union)
  .
  identifier(s)
  .
  identifier(u)
  !=
  const unsigned int(2147483650u)
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  union
  identifier(with_padding)
  {
  char
  identifier(arr)
  [
  const int(10)
  ]
  ;
  unsigned
  int
  identifier(ui)
  ;
  }
  ;
  int
  identifier(test_copy_array_members)
  (
  void
  )
  {
  union
  identifier(with_padding)
  identifier(union_array)
  [
  const int(3)
  ]
  =
  {
  {
  string literal("foobar")
  }
  ,
  {
  string literal("hello")
  }
  ,
  {
  string literal("itsaunion")
  }
  }
  ;
  union
  identifier(with_padding)
  identifier(another_union)
  =
  identifier(union_array)
  [
  const int(0)
  ]
  ;
  union
  identifier(with_padding)
  identifier(yet_another_union)
  =
  {
  string literal("blahblah")
  }
  ;
  identifier(union_array)
  [
  const int(2)
  ]
  =
  identifier(yet_another_union)
  ;
  if
  (
  identifier(strcmp)
  (
  identifier(union_array)
  [
  const int(0)
  ]
  .
  identifier(arr)
  ,
  string literal("foobar")
  )
  ||
  identifier(strcmp)
  (
  identifier(union_array)
  [
  const int(1)
  ]
  .
  identifier(arr)
  ,
  string literal("hello")
  )
  ||
  identifier(strcmp)
  (
  identifier(union_array)
  [
  const int(2)
  ]
  .
  identifier(arr)
  ,
  string literal("blahblah")
  )
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(strcmp)
  (
  identifier(another_union)
  .
  identifier(arr)
  ,
  string literal("foobar")
  )
  )
  {
  return
  const int(0)
  ;
  }
  if
  (
  identifier(strcmp)
  (
  identifier(yet_another_union)
  .
  identifier(arr)
  ,
  string literal("blahblah")
  )
  )
  {
  return
  const int(0)
  ;
  }
  return
  const int(1)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  if
  (
  !
  identifier(test_copy_to_pointer)
  (
  )
  )
  {
  return
  const int(1)
  ;
  }
  if
  (
  !
  identifier(test_copy_from_pointer)
  (
  )
  )
  {
  return
  const int(2)
  ;
  }
  if
  (
  !
  identifier(test_copy_array_members)
  (
  )
  )
  {
  return
  const int(3)
  ;
  }
  return
  const int(0)
  ;
  }
