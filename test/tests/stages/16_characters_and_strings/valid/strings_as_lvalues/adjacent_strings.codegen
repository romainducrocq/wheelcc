-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[1]: 
    AsmStaticConstant: 
      TIdentifier: string.0
      TInt: 1
      StringInit: 
        TIdentifier: Hello, World
        Bool: 1
        CStringLiteral: 
          List[12]: 
            TChar: 72
            TChar: 101
            TChar: 108
            TChar: 108
            TChar: 111
            TChar: 44
            TChar: 32
            TChar: 87
            TChar: 111
            TChar: 114
            TChar: 108
            TChar: 100
  List[1]: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[12]: 
        AsmBinary: 
          AsmSub: 
          QuadWord: 
          AsmImm: 
            TULong: 32
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSp: 
        AsmLea: 
          AsmData: 
            TIdentifier: string.0
            TLong: 0
          AsmRegister: 
            AsmR11: 
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmR11: 
          AsmMemory: 
            TLong: -8
            AsmBp: 
        AsmMov: 
          QuadWord: 
          AsmMemory: 
            TLong: -8
            AsmBp: 
          AsmRegister: 
            AsmR10: 
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmR10: 
          AsmMemory: 
            TLong: -16
            AsmBp: 
        AsmMov: 
          QuadWord: 
          AsmMemory: 
            TLong: -16
            AsmBp: 
          AsmRegister: 
            AsmDi: 
        AsmCall: 
          TIdentifier: puts
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmMemory: 
            TLong: -20
            AsmBp: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(1):
  : string.0
+
+
@@ String Constant Table @@
Dict(1):
  [Hello, World]: 
    String: "Hello, World"
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(6):
  [puts]: 
    Symbol: 
      FunType: 
        TULong: 16
        TULong: 1
        List[1]: 
          Pointer: 
            Char: 
        Int: 
      FunAttr: 
        Bool: 0
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [strings.1]: 
    Symbol: 
      Pointer: 
        Char: 
      LocalAttr: 
  [string.0]: 
    Symbol: 
      Array: 
        TLong: 13
        Char: 
      ConstantAttr: 
        StringInit: 
          TIdentifier: Hello, World
          Bool: 1
          CStringLiteral: 
            List[12]: 
              TChar: 72
              TChar: 101
              TChar: 108
              TChar: 108
              TChar: 111
              TChar: 44
              TChar: 32
              TChar: 87
              TChar: 111
              TChar: 114
              TChar: 108
              TChar: 100
  [addr.2]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(6):
  [puts]: 
    BackendFun: 
      Bool: 0
      List[0]: 
  [main]: 
    BackendFun: 
      Bool: 1
      List[0]: 
  [strings.1]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      QuadWord: 
  [addr.2]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      QuadWord: 
  [call.3]: 
    BackendObj: 
      Bool: 0
      Bool: 0
      LongWord: 
  [string.0]: 
    BackendObj: 
      Bool: 1
      Bool: 1
      ByteArray: 
        TLong: 13
        TInt: 1
