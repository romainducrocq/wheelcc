-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[3]: 
    TacStaticVariable: 
      TIdentifier: a
      Bool: 0
      SChar: 
      List[1]: 
        CharInit: 
          TChar: 10
    TacStaticVariable: 
      TIdentifier: b
      Bool: 0
      UChar: 
      List[1]: 
        UCharInit: 
          TUChar: 20
    TacStaticVariable: 
      TIdentifier: c
      Bool: 1
      Char: 
      List[1]: 
        CharInit: 
          TChar: 30
  List[1]: 
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[37]: 
        TacSignExtend: 
          TacVariable: 
            TIdentifier: a
          TacVariable: 
            TIdentifier: cast.2
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: cast.2
          TacConstant: 
            CConstInt: 
              TInt: 10
          TacVariable: 
            TIdentifier: binop.3
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: binop.3
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.1
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: b
          TacVariable: 
            TIdentifier: cast.4
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: cast.4
          TacConstant: 
            CConstInt: 
              TInt: 20
          TacVariable: 
            TIdentifier: binop.5
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: binop.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.2
        TacSignExtend: 
          TacVariable: 
            TIdentifier: c
          TacVariable: 
            TIdentifier: cast.6
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: cast.6
          TacConstant: 
            CConstInt: 
              TInt: 30
          TacVariable: 
            TIdentifier: binop.7
        TacJumpIfZero: 
          TIdentifier: if_false.3
          TacVariable: 
            TIdentifier: binop.7
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.3
        TacCopy: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: loop_counter.0
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 0
          TacVariable: 
            TIdentifier: cast.8
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.8
          TacVariable: 
            TIdentifier: d.1
        TacLabel: 
          TIdentifier: for_start.4
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: d.1
          TacVariable: 
            TIdentifier: cast.9
        TacBinary: 
          TacLessThan: 
          TacVariable: 
            TIdentifier: cast.9
          TacConstant: 
            CConstInt: 
              TInt: 100
          TacVariable: 
            TIdentifier: binop.10
        TacJumpIfZero: 
          TIdentifier: break_for.0
          TacVariable: 
            TIdentifier: binop.10
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: loop_counter.0
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.11
        TacCopy: 
          TacVariable: 
            TIdentifier: binop.11
          TacVariable: 
            TIdentifier: loop_counter.0
        TacLabel: 
          TIdentifier: continue_for.0
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: d.1
          TacVariable: 
            TIdentifier: cast.12
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: cast.12
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.13
        TacTruncate: 
          TacVariable: 
            TIdentifier: binop.13
          TacVariable: 
            TIdentifier: cast.14
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.14
          TacVariable: 
            TIdentifier: d.1
        TacJump: 
          TIdentifier: for_start.4
        TacLabel: 
          TIdentifier: break_for.0
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: loop_counter.0
          TacConstant: 
            CConstInt: 
              TInt: 100
          TacVariable: 
            TIdentifier: binop.15
        TacJumpIfZero: 
          TIdentifier: if_false.5
          TacVariable: 
            TIdentifier: binop.15
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 4
        TacLabel: 
          TIdentifier: if_false.5
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(20):
  [a]: 
    Symbol: 
      SChar: 
      StaticAttr: 
        Bool: 0
        Initial: 
          List[1]: 
            CharInit: 
              TChar: 10
  [b]: 
    Symbol: 
      UChar: 
      StaticAttr: 
        Bool: 0
        Initial: 
          List[1]: 
            UCharInit: 
              TUChar: 20
  [c]: 
    Symbol: 
      Char: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            CharInit: 
              TChar: 30
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [loop_counter.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [d.1]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [cast.2]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.4]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.5]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.6]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.7]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.8]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [cast.9]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.10]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.12]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.13]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.14]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [binop.15]: 
    Symbol: 
      Int: 
      LocalAttr: 
