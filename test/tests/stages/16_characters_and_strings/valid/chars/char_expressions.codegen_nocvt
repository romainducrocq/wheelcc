-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[0]: 
  List[9]: 
    AsmFunction: 
      TIdentifier: add_chars
      Bool: 1
      Bool: 0
      List[10]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c1.0
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c2.1
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c1.0
          AsmPseudo: 
            TIdentifier: cast.24
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c2.1
          AsmPseudo: 
            TIdentifier: cast.25
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.24
          AsmPseudo: 
            TIdentifier: binop.26
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.25
          AsmPseudo: 
            TIdentifier: binop.26
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.26
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: divide_chars
      Bool: 1
      Bool: 0
      List[12]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c1.2
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c2.3
        AsmMovZeroExtend: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c1.2
          AsmPseudo: 
            TIdentifier: cast.27
        AsmMovZeroExtend: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c2.3
          AsmPseudo: 
            TIdentifier: cast.28
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.27
          AsmRegister: 
            AsmAx: 
        AsmCdq: 
          LongWord: 
        AsmIdiv: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.28
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: binop.29
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.29
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: le
      Bool: 1
      Bool: 0
      List[11]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c1.4
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c2.5
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c1.4
          AsmPseudo: 
            TIdentifier: cast.30
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c2.5
          AsmPseudo: 
            TIdentifier: cast.31
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.31
          AsmPseudo: 
            TIdentifier: cast.30
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.32
        AsmSetCC: 
          AsmLE: 
          AsmPseudo: 
            TIdentifier: binop.32
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.32
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: subscript_char
      Bool: 1
      Bool: 0
      List[12]: 
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: ptr.6
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: idx.7
        AsmMovSx: 
          Byte: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: idx.7
          AsmPseudo: 
            TIdentifier: cast.33
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: ptr.6
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.33
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 4
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: subscr.34
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: subscr.34
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          LongWord: 
          AsmMemory: 
            TLong: 0
            AsmAx: 
          AsmPseudo: 
            TIdentifier: subscr.35
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: subscr.35
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: sub_char_from_pointer
      Bool: 1
      Bool: 0
      List[12]: 
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: ptr.8
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: idx.9
        AsmMovSx: 
          Byte: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: idx.9
          AsmPseudo: 
            TIdentifier: cast.36
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.36
          AsmPseudo: 
            TIdentifier: binop.37
        AsmUnary: 
          AsmNeg: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: binop.37
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: ptr.8
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: binop.37
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 4
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: binop.38
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: binop.38
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: and_char
      Bool: 1
      Bool: 0
      List[15]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c1.10
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: i.11
        AsmCmp: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: c1.10
        AsmJmpCC: 
          TIdentifier: and_false.1
          AsmE: 
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: i.11
        AsmJmpCC: 
          TIdentifier: and_false.1
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.39
        AsmJmp: 
          TIdentifier: and_true.2
        AsmLabel: 
          TIdentifier: and_false.1
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.39
        AsmLabel: 
          TIdentifier: and_true.2
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.39
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: or_char
      Bool: 1
      Bool: 0
      List[15]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c1.12
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c2.13
        AsmCmp: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: c1.12
        AsmJmpCC: 
          TIdentifier: or_true.3
          AsmNE: 
        AsmCmp: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: c2.13
        AsmJmpCC: 
          TIdentifier: or_true.3
          AsmNE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.40
        AsmJmp: 
          TIdentifier: or_false.4
        AsmLabel: 
          TIdentifier: or_true.3
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.40
        AsmLabel: 
          TIdentifier: or_false.4
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.40
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: test_for_loop_char
      Bool: 1
      Bool: 0
      List[28]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: counter.14
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 127
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.41
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.41
          AsmPseudo: 
            TIdentifier: s.15
        AsmLabel: 
          TIdentifier: for_start.5
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: s.15
          AsmPseudo: 
            TIdentifier: cast.42
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.42
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.43
        AsmSetCC: 
          AsmG: 
          AsmPseudo: 
            TIdentifier: binop.43
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.43
        AsmJmpCC: 
          TIdentifier: break_for.0
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: counter.14
          AsmPseudo: 
            TIdentifier: binop.44
        AsmBinary: 
          AsmAdd: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.44
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.44
          AsmPseudo: 
            TIdentifier: counter.14
        AsmLabel: 
          TIdentifier: continue_for.0
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: s.15
          AsmPseudo: 
            TIdentifier: cast.45
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.45
          AsmPseudo: 
            TIdentifier: binop.46
        AsmBinary: 
          AsmSub: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.46
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: binop.46
          AsmPseudo: 
            TIdentifier: cast.47
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.47
          AsmPseudo: 
            TIdentifier: s.15
        AsmJmp: 
          TIdentifier: for_start.5
        AsmLabel: 
          TIdentifier: break_for.0
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 127
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: counter.14
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.48
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: binop.48
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.48
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[133]: 
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 8
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.49
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.49
          AsmPseudo: 
            TIdentifier: c1.16
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.50
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.50
          AsmPseudo: 
            TIdentifier: c2.17
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c1.16
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c2.17
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: add_chars
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.51
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 12
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.51
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.52
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.52
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.52
        AsmJmpCC: 
          TIdentifier: if_false.6
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.6
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 250
            Bool: 0
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.53
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.53
          AsmPseudo: 
            TIdentifier: uc1.18
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 25
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.54
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.54
          AsmPseudo: 
            TIdentifier: uc2.19
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: uc1.18
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: uc2.19
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: divide_chars
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.55
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.55
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.56
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.56
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.56
        AsmJmpCC: 
          TIdentifier: if_false.7
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.7
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c1.16
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c2.17
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: le
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.57
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.57
        AsmJmpCC: 
          TIdentifier: if_false.8
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.8
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c2.17
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c2.17
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: le
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.58
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.58
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.59
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.59
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.59
        AsmJmpCC: 
          TIdentifier: if_false.9
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.9
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 11
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 12
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 4
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 13
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 8
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 14
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 12
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.60
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.60
          AsmPseudo: 
            TIdentifier: idx.21
        AsmLea: 
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 0
          AsmPseudo: 
            TIdentifier: addr.61
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: addr.61
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: idx.21
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: subscript_char
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.62
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 13
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.62
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.63
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.63
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.63
        AsmJmpCC: 
          TIdentifier: if_false.10
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 5
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.10
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.64
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.64
          AsmPseudo: 
            TIdentifier: offset.22
        AsmLea: 
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 0
          AsmPseudo: 
            TIdentifier: addr.65
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.66
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: addr.65
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.66
          AsmRegister: 
            AsmDx: 
        AsmLea: 
          AsmIndexed: 
            TLong: 4
            AsmAx: 
            AsmDx: 
          AsmPseudo: 
            TIdentifier: binop.67
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: binop.67
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: offset.22
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: sub_char_from_pointer
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.68
        AsmLea: 
          AsmPseudoMem: 
            TIdentifier: arr.20
            TLong: 0
          AsmPseudo: 
            TIdentifier: addr.69
        AsmCmp: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: addr.69
          AsmPseudo: 
            TIdentifier: call.68
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.70
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.70
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.70
        AsmJmpCC: 
          TIdentifier: if_false.11
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 6
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.11
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.71
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.71
          AsmPseudo: 
            TIdentifier: zero.23
        AsmCmp: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: zero.23
        AsmJmpCC: 
          TIdentifier: if_false.12
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 7
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.12
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: zero.23
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 12
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: and_char
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.72
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.72
        AsmJmpCC: 
          TIdentifier: if_false.13
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 8
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.13
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.73
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.73
          AsmPseudo: 
            TIdentifier: uc2.19
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: zero.23
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: uc2.19
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: or_char
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.74
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.74
        AsmJmpCC: 
          TIdentifier: if_false.14
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 9
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.14
        AsmCall: 
          TIdentifier: test_for_loop_char
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.75
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.75
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.76
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.76
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.76
        AsmJmpCC: 
          TIdentifier: if_false.15
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.15
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(1):
  : arr.20
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(86):
  [c1.0]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [c2.1]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [add_chars]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Char: 
          Char: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c1.2]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [c2.3]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [divide_chars]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          UChar: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c1.4]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [c2.5]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [le]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Char: 
          Char: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [ptr.6]: 
    Symbol: 
      Pointer: 
        Int: 
      LocalAttr: 
  [idx.7]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [subscript_char]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Pointer: 
            Int: 
          Char: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [ptr.8]: 
    Symbol: 
      Pointer: 
        Int: 
      LocalAttr: 
  [idx.9]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [sub_char_from_pointer]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Pointer: 
            Int: 
          SChar: 
        Pointer: 
          Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c1.10]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [i.11]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [and_char]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          SChar: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c1.12]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [c2.13]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [or_char]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          SChar: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [test_for_loop_char]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [counter.14]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [s.15]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c1.16]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [c2.17]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [uc1.18]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [uc2.19]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [arr.20]: 
    Symbol: 
      Array: 
        TLong: 4
        Int: 
      LocalAttr: 
  [idx.21]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [offset.22]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [zero.23]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.27]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.28]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.29]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.33]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.34]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [subscr.35]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.36]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.37]: 
    Symbol: 
      Pointer: 
        Int: 
      LocalAttr: 
  [binop.38]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.39]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.40]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.41]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.42]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.43]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.44]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.45]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.46]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.47]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [binop.48]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.49]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.50]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [call.51]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.52]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.53]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [cast.54]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [call.55]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.56]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.57]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.58]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.59]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.60]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [addr.61]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.62]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.63]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.64]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [addr.65]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [cast.66]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.67]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.68]: 
    Symbol: 
      Pointer: 
        Int: 
      LocalAttr: 
  [addr.69]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.70]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.71]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [call.72]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.73]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [call.74]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.75]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.76]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
