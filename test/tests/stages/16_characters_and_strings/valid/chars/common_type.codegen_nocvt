-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
-- Assembly generation ... OK
+
+
@@ ASM AST @@
AsmProgram: 
  List[1]: 
    AsmStaticConstant: 
      TIdentifier: double.8
      TInt: 8
      DoubleInit: 
        TIdentifier: 4622241330054037504
  List[8]: 
    AsmStaticVariable: 
      TIdentifier: ten
      TInt: 1
      Bool: 1
      List[1]: 
        CharInit: 
          TChar: 10
    AsmFunction: 
      TIdentifier: ternary
      Bool: 1
      Bool: 0
      List[15]: 
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: flag.0
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c.1
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: flag.0
        AsmJmpCC: 
          TIdentifier: ternary_else.0
          AsmE: 
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c.1
          AsmPseudo: 
            TIdentifier: cast.15
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.15
          AsmPseudo: 
            TIdentifier: ternop.14
        AsmJmp: 
          TIdentifier: ternary_false.1
        AsmLabel: 
          TIdentifier: ternary_else.0
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: ternop.14
        AsmLabel: 
          TIdentifier: ternary_false.1
        AsmMovZeroExtend: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: ternop.14
          AsmPseudo: 
            TIdentifier: cast.16
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.16
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: char_lt_int
      Bool: 1
      Bool: 0
      List[10]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c.2
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: i.3
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c.2
          AsmPseudo: 
            TIdentifier: cast.17
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.3
          AsmPseudo: 
            TIdentifier: cast.17
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.18
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.18
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.18
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: uchar_gt_long
      Bool: 1
      Bool: 0
      List[10]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: uc.4
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: l.5
        AsmMovZeroExtend: 
          Byte: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: uc.4
          AsmPseudo: 
            TIdentifier: cast.19
        AsmCmp: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: l.5
          AsmPseudo: 
            TIdentifier: cast.19
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.20
        AsmSetCC: 
          AsmG: 
          AsmPseudo: 
            TIdentifier: binop.20
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.20
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: char_lt_uchar
      Bool: 1
      Bool: 0
      List[11]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: c.6
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: u.7
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c.6
          AsmPseudo: 
            TIdentifier: cast.21
        AsmMovZeroExtend: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: u.7
          AsmPseudo: 
            TIdentifier: cast.22
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.22
          AsmPseudo: 
            TIdentifier: cast.21
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.23
        AsmSetCC: 
          AsmL: 
          AsmPseudo: 
            TIdentifier: binop.23
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.23
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: signed_char_le_char
      Bool: 1
      Bool: 0
      List[11]: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmDi: 
          AsmPseudo: 
            TIdentifier: s.8
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmSi: 
          AsmPseudo: 
            TIdentifier: c.9
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: s.8
          AsmPseudo: 
            TIdentifier: cast.24
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: c.9
          AsmPseudo: 
            TIdentifier: cast.25
        AsmCmp: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: cast.25
          AsmPseudo: 
            TIdentifier: cast.24
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.26
        AsmSetCC: 
          AsmLE: 
          AsmPseudo: 
            TIdentifier: binop.26
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.26
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: multiply
      Bool: 1
      Bool: 0
      List[15]: 
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: ten
          AsmRegister: 
            AsmAx: 
        AsmCvtsi2sd: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: cast.27
        AsmMov: 
          BackendDouble: 
          AsmData: 
            TIdentifier: double.8
            TLong: 0
          AsmPseudo: 
            TIdentifier: binop.28
        AsmBinary: 
          AsmMult: 
          BackendDouble: 
          AsmPseudo: 
            TIdentifier: cast.27
          AsmPseudo: 
            TIdentifier: binop.28
        AsmCvttsd2si: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.28
          AsmRegister: 
            AsmAx: 
        AsmMov: 
          Byte: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: cast.29
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.29
          AsmPseudo: 
            TIdentifier: i.10
        AsmMovSx: 
          Byte: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: i.10
          AsmPseudo: 
            TIdentifier: cast.30
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 107
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.30
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.31
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: binop.31
        AsmMov: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: binop.31
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
    AsmFunction: 
      TIdentifier: main
      Bool: 1
      Bool: 0
      List[92]: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 10
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.32
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.32
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: unop.32
          AsmPseudo: 
            TIdentifier: cast.33
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.33
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: ternary
        AsmMov: 
          QuadWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.34
        AsmCmp: 
          QuadWord: 
          AsmImm: 
            TULong: 4294967286
            Bool: 0
            Bool: 1
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.34
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.35
        AsmSetCC: 
          AsmNE: 
          AsmPseudo: 
            TIdentifier: binop.35
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: binop.35
        AsmJmpCC: 
          TIdentifier: if_false.2
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.2
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.36
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.36
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 256
            Bool: 0
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: char_lt_int
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.37
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.37
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.38
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.38
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.38
        AsmJmpCC: 
          TIdentifier: if_false.3
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.3
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 100
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.39
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.40
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.40
        AsmMovSx: 
          LongWord: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: unop.40
          AsmPseudo: 
            TIdentifier: cast.41
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.39
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          QuadWord: 
          AsmPseudo: 
            TIdentifier: cast.41
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: uchar_gt_long
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.42
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.42
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.43
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.43
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.43
        AsmJmpCC: 
          TIdentifier: if_false.4
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 3
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.4
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.44
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.44
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: unop.44
          AsmPseudo: 
            TIdentifier: cast.45
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.45
          AsmPseudo: 
            TIdentifier: c.11
        AsmMov: 
          Byte: 
          AsmImm: 
            TULong: 2
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: cast.46
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.46
          AsmPseudo: 
            TIdentifier: u.12
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c.11
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: u.12
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: char_lt_uchar
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.47
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.47
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.48
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.48
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.48
        AsmJmpCC: 
          TIdentifier: if_false.5
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 4
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.5
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 1
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.49
        AsmUnary: 
          AsmNeg: 
          LongWord: 
          AsmPseudo: 
            TIdentifier: unop.49
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: unop.49
          AsmPseudo: 
            TIdentifier: cast.50
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: cast.50
          AsmPseudo: 
            TIdentifier: s.13
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: s.13
          AsmRegister: 
            AsmDi: 
        AsmMov: 
          Byte: 
          AsmPseudo: 
            TIdentifier: c.11
          AsmRegister: 
            AsmSi: 
        AsmCall: 
          TIdentifier: signed_char_le_char
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.51
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.51
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.52
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.52
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.52
        AsmJmpCC: 
          TIdentifier: if_false.6
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 5
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.6
        AsmCall: 
          TIdentifier: multiply
        AsmMov: 
          LongWord: 
          AsmRegister: 
            AsmAx: 
          AsmPseudo: 
            TIdentifier: call.53
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: call.53
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.54
        AsmSetCC: 
          AsmE: 
          AsmPseudo: 
            TIdentifier: unop.54
        AsmCmp: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmPseudo: 
            TIdentifier: unop.54
        AsmJmpCC: 
          TIdentifier: if_false.7
          AsmE: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 6
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmLabel: 
          TIdentifier: if_false.7
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
        AsmMov: 
          LongWord: 
          AsmImm: 
            TULong: 0
            Bool: 1
            Bool: 0
            Bool: 0
          AsmRegister: 
            AsmAx: 
        AsmRet: 
+
+
@@ Addressed Set @@
Set(0):
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(63):
  [flag.0]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [c.1]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [ternary]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Int: 
          Char: 
        Long: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c.2]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [i.3]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [char_lt_int]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Char: 
          Int: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [uc.4]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [l.5]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [uchar_gt_long]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          UChar: 
          Long: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c.6]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [u.7]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [char_lt_uchar]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          Char: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [s.8]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [c.9]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [signed_char_le_char]: 
    Symbol: 
      FunType: 
        TULong: 48
        TULong: 1
        List[2]: 
          SChar: 
          Char: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [ten]: 
    Symbol: 
      Char: 
      StaticAttr: 
        Bool: 1
        Initial: 
          List[1]: 
            CharInit: 
              TChar: 10
  [multiply]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [i.10]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [main]: 
    Symbol: 
      FunType: 
        TULong: 0
        TULong: 1
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [c.11]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [u.12]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [s.13]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [ternop.14]: 
    Symbol: 
      UInt: 
      LocalAttr: 
  [cast.15]: 
    Symbol: 
      UInt: 
      LocalAttr: 
  [cast.16]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [cast.17]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.18]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.19]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.21]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.22]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.23]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.27]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [binop.28]: 
    Symbol: 
      Double: 
      LocalAttr: 
  [cast.29]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.33]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [call.34]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [binop.35]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.36]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [call.37]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.38]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.39]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [unop.40]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.41]: 
    Symbol: 
      Long: 
      LocalAttr: 
  [call.42]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.43]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.44]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.45]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.46]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [call.47]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.48]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.49]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.50]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [call.51]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.52]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.53]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.54]: 
    Symbol: 
      Int: 
      LocalAttr: 
+
+
@@ Backend Symbol Table @@
Dict(0):
