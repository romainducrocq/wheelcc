-- Lexing ... OK
-- Parsing ... OK
-- Semantic analysis ... OK
-- TAC representation ... OK
+
+
@@ TAC AST @@
TacProgram: 
  List[0]: 
  List[0]: 
  List[7]: 
    TacFunction: 
      TIdentifier: add_chars
      Bool: 1
      List[3]: 
        TIdentifier: c1.0
        TIdentifier: c2.1
        TIdentifier: c3.2
      List[7]: 
        TacSignExtend: 
          TacVariable: 
            TIdentifier: c1.0
          TacVariable: 
            TIdentifier: cast.19
        TacSignExtend: 
          TacVariable: 
            TIdentifier: c2.1
          TacVariable: 
            TIdentifier: cast.20
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: cast.19
          TacVariable: 
            TIdentifier: cast.20
          TacVariable: 
            TIdentifier: binop.21
        TacSignExtend: 
          TacVariable: 
            TIdentifier: c3.2
          TacVariable: 
            TIdentifier: cast.22
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: binop.21
          TacVariable: 
            TIdentifier: cast.22
          TacVariable: 
            TIdentifier: binop.23
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.23
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: negate
      Bool: 1
      List[1]: 
        TIdentifier: uc.3
      List[4]: 
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: uc.3
          TacVariable: 
            TIdentifier: cast.24
        TacUnary: 
          TacNegate: 
          TacVariable: 
            TIdentifier: cast.24
          TacVariable: 
            TIdentifier: unop.25
        TacReturn: 
          TacVariable: 
            TIdentifier: unop.25
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: complement
      Bool: 1
      List[1]: 
        TIdentifier: uc.4
      List[4]: 
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: uc.4
          TacVariable: 
            TIdentifier: cast.26
        TacUnary: 
          TacComplement: 
          TacVariable: 
            TIdentifier: cast.26
          TacVariable: 
            TIdentifier: unop.27
        TacReturn: 
          TacVariable: 
            TIdentifier: unop.27
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: add_then_div
      Bool: 1
      List[3]: 
        TIdentifier: a.5
        TIdentifier: b.6
        TIdentifier: c.7
      List[7]: 
        TacSignExtend: 
          TacVariable: 
            TIdentifier: a.5
          TacVariable: 
            TIdentifier: cast.28
        TacSignExtend: 
          TacVariable: 
            TIdentifier: b.6
          TacVariable: 
            TIdentifier: cast.29
        TacBinary: 
          TacAdd: 
          TacVariable: 
            TIdentifier: cast.28
          TacVariable: 
            TIdentifier: cast.29
          TacVariable: 
            TIdentifier: binop.30
        TacSignExtend: 
          TacVariable: 
            TIdentifier: c.7
          TacVariable: 
            TIdentifier: cast.31
        TacBinary: 
          TacDivide: 
          TacVariable: 
            TIdentifier: binop.30
          TacVariable: 
            TIdentifier: cast.31
          TacVariable: 
            TIdentifier: binop.32
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.32
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: mixed_multiply
      Bool: 1
      List[2]: 
        TIdentifier: s.8
        TIdentifier: u.9
      List[5]: 
        TacSignExtend: 
          TacVariable: 
            TIdentifier: s.8
          TacVariable: 
            TIdentifier: cast.33
        TacZeroExtend: 
          TacVariable: 
            TIdentifier: u.9
          TacVariable: 
            TIdentifier: cast.34
        TacBinary: 
          TacMultiply: 
          TacVariable: 
            TIdentifier: cast.33
          TacVariable: 
            TIdentifier: cast.34
          TacVariable: 
            TIdentifier: binop.35
        TacReturn: 
          TacVariable: 
            TIdentifier: binop.35
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: decrement
      Bool: 1
      List[1]: 
        TIdentifier: s.10
      List[6]: 
        TacSignExtend: 
          TacVariable: 
            TIdentifier: s.10
          TacVariable: 
            TIdentifier: cast.36
        TacBinary: 
          TacSubtract: 
          TacVariable: 
            TIdentifier: cast.36
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: binop.37
        TacTruncate: 
          TacVariable: 
            TIdentifier: binop.37
          TacVariable: 
            TIdentifier: cast.38
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.38
          TacVariable: 
            TIdentifier: s.10
        TacReturn: 
          TacVariable: 
            TIdentifier: s.10
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
    TacFunction: 
      TIdentifier: main
      Bool: 1
      List[0]: 
      List[62]: 
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 100
          TacVariable: 
            TIdentifier: cast.39
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.39
          TacVariable: 
            TIdentifier: a.11
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 109
          TacVariable: 
            TIdentifier: cast.40
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.40
          TacVariable: 
            TIdentifier: b.12
        TacFunCall: 
          TIdentifier: add_chars
          List[3]: 
            TacVariable: 
              TIdentifier: a.11
            TacVariable: 
              TIdentifier: a.11
            TacVariable: 
              TIdentifier: b.12
          TacVariable: 
            TIdentifier: call.41
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.41
          TacConstant: 
            CConstInt: 
              TInt: 309
          TacVariable: 
            TIdentifier: binop.42
        TacJumpIfZero: 
          TIdentifier: if_false.0
          TacVariable: 
            TIdentifier: binop.42
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 1
        TacLabel: 
          TIdentifier: if_false.0
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: cast.43
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.43
          TacVariable: 
            TIdentifier: one.13
        TacFunCall: 
          TIdentifier: negate
          List[1]: 
            TacVariable: 
              TIdentifier: one.13
          TacVariable: 
            TIdentifier: call.44
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 1
          TacVariable: 
            TIdentifier: unop.45
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.44
          TacVariable: 
            TIdentifier: unop.45
          TacVariable: 
            TIdentifier: binop.46
        TacJumpIfZero: 
          TIdentifier: if_false.1
          TacVariable: 
            TIdentifier: binop.46
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 2
        TacLabel: 
          TIdentifier: if_false.1
        TacFunCall: 
          TIdentifier: complement
          List[1]: 
            TacVariable: 
              TIdentifier: one.13
          TacVariable: 
            TIdentifier: call.47
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: unop.48
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.47
          TacVariable: 
            TIdentifier: unop.48
          TacVariable: 
            TIdentifier: binop.49
        TacJumpIfZero: 
          TIdentifier: if_false.2
          TacVariable: 
            TIdentifier: binop.49
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 3
        TacLabel: 
          TIdentifier: if_false.2
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 127
          TacVariable: 
            TIdentifier: cast.50
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.50
          TacVariable: 
            TIdentifier: w.14
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: cast.51
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.51
          TacVariable: 
            TIdentifier: x.15
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 2
          TacVariable: 
            TIdentifier: cast.52
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.52
          TacVariable: 
            TIdentifier: y.16
        TacFunCall: 
          TIdentifier: add_then_div
          List[3]: 
            TacVariable: 
              TIdentifier: w.14
            TacVariable: 
              TIdentifier: x.15
            TacVariable: 
              TIdentifier: y.16
          TacVariable: 
            TIdentifier: call.53
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.53
          TacConstant: 
            CConstInt: 
              TInt: 65
          TacVariable: 
            TIdentifier: binop.54
        TacJumpIfZero: 
          TIdentifier: if_false.3
          TacVariable: 
            TIdentifier: binop.54
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 4
        TacLabel: 
          TIdentifier: if_false.3
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 3
          TacVariable: 
            TIdentifier: unop.55
        TacTruncate: 
          TacVariable: 
            TIdentifier: unop.55
          TacVariable: 
            TIdentifier: cast.56
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.56
          TacVariable: 
            TIdentifier: sc.17
        TacTruncate: 
          TacConstant: 
            CConstInt: 
              TInt: 250
          TacVariable: 
            TIdentifier: cast.57
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.57
          TacVariable: 
            TIdentifier: uc.18
        TacFunCall: 
          TIdentifier: mixed_multiply
          List[2]: 
            TacVariable: 
              TIdentifier: sc.17
            TacVariable: 
              TIdentifier: uc.18
          TacVariable: 
            TIdentifier: call.58
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 750
          TacVariable: 
            TIdentifier: unop.59
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: call.58
          TacVariable: 
            TIdentifier: unop.59
          TacVariable: 
            TIdentifier: binop.60
        TacJumpIfZero: 
          TIdentifier: if_false.4
          TacVariable: 
            TIdentifier: binop.60
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 5
        TacLabel: 
          TIdentifier: if_false.4
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 128
          TacVariable: 
            TIdentifier: unop.61
        TacTruncate: 
          TacVariable: 
            TIdentifier: unop.61
          TacVariable: 
            TIdentifier: cast.62
        TacCopy: 
          TacVariable: 
            TIdentifier: cast.62
          TacVariable: 
            TIdentifier: sc.17
        TacSignExtend: 
          TacVariable: 
            TIdentifier: sc.17
          TacVariable: 
            TIdentifier: cast.63
        TacUnary: 
          TacNegate: 
          TacConstant: 
            CConstInt: 
              TInt: 128
          TacVariable: 
            TIdentifier: unop.64
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: cast.63
          TacVariable: 
            TIdentifier: unop.64
          TacVariable: 
            TIdentifier: binop.65
        TacJumpIfZero: 
          TIdentifier: if_false.5
          TacVariable: 
            TIdentifier: binop.65
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 6
        TacLabel: 
          TIdentifier: if_false.5
        TacFunCall: 
          TIdentifier: decrement
          List[1]: 
            TacVariable: 
              TIdentifier: sc.17
          TacVariable: 
            TIdentifier: call.66
        TacSignExtend: 
          TacVariable: 
            TIdentifier: call.66
          TacVariable: 
            TIdentifier: cast.67
        TacBinary: 
          TacNotEqual: 
          TacVariable: 
            TIdentifier: cast.67
          TacConstant: 
            CConstInt: 
              TInt: 127
          TacVariable: 
            TIdentifier: binop.68
        TacJumpIfZero: 
          TIdentifier: if_false.6
          TacVariable: 
            TIdentifier: binop.68
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 7
        TacLabel: 
          TIdentifier: if_false.6
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
        TacReturn: 
          TacConstant: 
            CConstInt: 
              TInt: 0
+
+
@@ String Constant Table @@
Dict(0):
+
+
@@ Structure Typedef Table @@
Dict(0):
+
+
@@ Symbol Table @@
Dict(76):
  [c1.0]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [c2.1]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [c3.2]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [add_chars]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[3]: 
          Char: 
          Char: 
          Char: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [uc.3]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [negate]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [uc.4]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [complement]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [a.5]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [b.6]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [c.7]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [add_then_div]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[3]: 
          SChar: 
          SChar: 
          SChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [s.8]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [u.9]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [mixed_multiply]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[2]: 
          SChar: 
          UChar: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [s.10]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [decrement]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[1]: 
          SChar: 
        SChar: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [main]: 
    Symbol: 
      FunType: 
        TULong: 67108864
        TULong: 67108864
        List[0]: 
        Int: 
      FunAttr: 
        Bool: 1
        Bool: 1
  [a.11]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [b.12]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [one.13]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [w.14]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [x.15]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [y.16]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [sc.17]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [uc.18]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [cast.19]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.20]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.21]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.22]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.23]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.24]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.25]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.26]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.27]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.28]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.29]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.30]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.31]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.32]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.33]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.34]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.35]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.36]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.37]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.38]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.39]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [cast.40]: 
    Symbol: 
      Char: 
      LocalAttr: 
  [call.41]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.42]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.43]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [call.44]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.45]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.46]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.47]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.48]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.49]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.50]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.51]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.52]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [call.53]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.54]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.55]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.56]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.57]: 
    Symbol: 
      UChar: 
      LocalAttr: 
  [call.58]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.59]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.60]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.61]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [cast.62]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.63]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [unop.64]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.65]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [call.66]: 
    Symbol: 
      SChar: 
      LocalAttr: 
  [cast.67]: 
    Symbol: 
      Int: 
      LocalAttr: 
  [binop.68]: 
    Symbol: 
      Int: 
      LocalAttr: 
