-- Lexing ... OK
+
+
@@ Tokens @@
List[963]:
  unsigned
  char
  identifier(char_to_uchar)
  (
  char
  identifier(c)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(c)
  ;
  }
  signed
  char
  identifier(char_to_schar)
  (
  char
  identifier(c)
  )
  {
  return
  (
  signed
  char
  )
  identifier(c)
  ;
  }
  char
  identifier(uchar_to_char)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  char
  )
  identifier(u)
  ;
  }
  char
  identifier(schar_to_char)
  (
  signed
  char
  identifier(u)
  )
  {
  return
  (
  char
  )
  identifier(u)
  ;
  }
  signed
  char
  identifier(uchar_to_schar)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  signed
  char
  )
  identifier(u)
  ;
  }
  unsigned
  char
  identifier(schar_to_uchar)
  (
  signed
  char
  identifier(u)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(u)
  ;
  }
  int
  identifier(char_to_int)
  (
  char
  identifier(c)
  )
  {
  return
  (
  int
  )
  identifier(c)
  ;
  }
  unsigned
  int
  identifier(char_to_uint)
  (
  char
  identifier(c)
  )
  {
  return
  (
  unsigned
  int
  )
  identifier(c)
  ;
  }
  long
  identifier(char_to_long)
  (
  char
  identifier(c)
  )
  {
  return
  (
  long
  )
  identifier(c)
  ;
  }
  unsigned
  long
  identifier(char_to_ulong)
  (
  char
  identifier(c)
  )
  {
  return
  (
  unsigned
  long
  )
  identifier(c)
  ;
  }
  double
  identifier(char_to_double)
  (
  char
  identifier(c)
  )
  {
  return
  (
  double
  )
  identifier(c)
  ;
  }
  int
  identifier(schar_to_int)
  (
  signed
  char
  identifier(s)
  )
  {
  return
  (
  int
  )
  identifier(s)
  ;
  }
  unsigned
  int
  identifier(schar_to_uint)
  (
  signed
  char
  identifier(s)
  )
  {
  return
  (
  unsigned
  int
  )
  identifier(s)
  ;
  }
  long
  identifier(schar_to_long)
  (
  signed
  char
  identifier(s)
  )
  {
  return
  (
  long
  )
  identifier(s)
  ;
  }
  unsigned
  long
  identifier(schar_to_ulong)
  (
  signed
  char
  identifier(s)
  )
  {
  return
  (
  unsigned
  long
  )
  identifier(s)
  ;
  }
  double
  identifier(schar_to_double)
  (
  signed
  char
  identifier(s)
  )
  {
  return
  (
  double
  )
  identifier(s)
  ;
  }
  int
  identifier(uchar_to_int)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  int
  )
  identifier(u)
  ;
  }
  unsigned
  int
  identifier(uchar_to_uint)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  unsigned
  int
  )
  identifier(u)
  ;
  }
  long
  identifier(uchar_to_long)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  long
  )
  identifier(u)
  ;
  }
  unsigned
  long
  identifier(uchar_to_ulong)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  unsigned
  long
  )
  identifier(u)
  ;
  }
  double
  identifier(uchar_to_double)
  (
  unsigned
  char
  identifier(u)
  )
  {
  return
  (
  double
  )
  identifier(u)
  ;
  }
  char
  identifier(int_to_char)
  (
  int
  identifier(i)
  )
  {
  return
  (
  char
  )
  identifier(i)
  ;
  }
  char
  identifier(uint_to_char)
  (
  unsigned
  int
  identifier(u)
  )
  {
  return
  (
  char
  )
  identifier(u)
  ;
  }
  char
  identifier(double_to_char)
  (
  double
  identifier(d)
  )
  {
  return
  (
  char
  )
  identifier(d)
  ;
  }
  signed
  char
  identifier(long_to_schar)
  (
  long
  identifier(l)
  )
  {
  return
  (
  signed
  char
  )
  identifier(l)
  ;
  }
  signed
  char
  identifier(ulong_to_schar)
  (
  unsigned
  long
  identifier(l)
  )
  {
  return
  (
  signed
  char
  )
  identifier(l)
  ;
  }
  unsigned
  char
  identifier(int_to_uchar)
  (
  int
  identifier(i)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(i)
  ;
  }
  unsigned
  char
  identifier(uint_to_uchar)
  (
  unsigned
  int
  identifier(ui)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(ui)
  ;
  }
  unsigned
  char
  identifier(long_to_uchar)
  (
  long
  identifier(l)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(l)
  ;
  }
  unsigned
  char
  identifier(ulong_to_uchar)
  (
  unsigned
  long
  identifier(ul)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(ul)
  ;
  }
  unsigned
  char
  identifier(double_to_uchar)
  (
  double
  identifier(d)
  )
  {
  return
  (
  unsigned
  char
  )
  identifier(d)
  ;
  }
  int
  identifier(main)
  (
  void
  )
  {
  char
  identifier(c)
  =
  const int(127)
  ;
  if
  (
  identifier(char_to_uchar)
  (
  identifier(c)
  )
  !=
  const int(127)
  )
  {
  return
  const int(1)
  ;
  }
  if
  (
  identifier(char_to_int)
  (
  identifier(c)
  )
  !=
  const int(127)
  )
  {
  return
  const int(2)
  ;
  }
  if
  (
  identifier(char_to_ulong)
  (
  identifier(c)
  )
  !=
  const int(127)
  )
  {
  return
  const int(3)
  ;
  }
  signed
  char
  identifier(sc)
  =
  -
  const int(10)
  ;
  if
  (
  identifier(schar_to_uchar)
  (
  identifier(sc)
  )
  !=
  const int(246)
  )
  {
  return
  const int(4)
  ;
  }
  if
  (
  identifier(schar_to_long)
  (
  identifier(sc)
  )
  !=
  -
  const int(10)
  )
  {
  return
  const int(5)
  ;
  }
  if
  (
  identifier(schar_to_uint)
  (
  identifier(sc)
  )
  !=
  const unsigned int(4294967286u)
  )
  {
  return
  const int(6)
  ;
  }
  if
  (
  identifier(schar_to_double)
  (
  identifier(sc)
  )
  !=
  -
  const double(10.0)
  )
  {
  return
  const int(7)
  ;
  }
  unsigned
  char
  identifier(uc)
  =
  const int(250)
  ;
  if
  (
  identifier(uchar_to_int)
  (
  identifier(uc)
  )
  !=
  const int(250)
  )
  {
  return
  const int(8)
  ;
  }
  if
  (
  identifier(uchar_to_long)
  (
  identifier(uc)
  )
  !=
  const int(250)
  )
  {
  return
  const int(9)
  ;
  }
  if
  (
  identifier(uchar_to_uint)
  (
  identifier(uc)
  )
  !=
  const int(250)
  )
  {
  return
  const int(10)
  ;
  }
  if
  (
  identifier(uchar_to_ulong)
  (
  identifier(uc)
  )
  !=
  const int(250)
  )
  {
  return
  const int(11)
  ;
  }
  if
  (
  identifier(uchar_to_double)
  (
  identifier(uc)
  )
  !=
  const double(250.0)
  )
  {
  return
  const int(12)
  ;
  }
  if
  (
  identifier(uchar_to_schar)
  (
  identifier(uc)
  )
  !=
  -
  const int(6)
  )
  {
  return
  const int(13)
  ;
  }
  if
  (
  identifier(uchar_to_char)
  (
  identifier(uc)
  )
  !=
  -
  const int(6)
  )
  {
  return
  const int(14)
  ;
  }
  identifier(c)
  =
  (
  char
  )
  -
  const int(128)
  ;
  if
  (
  identifier(int_to_char)
  (
  const int(128)
  )
  !=
  identifier(c)
  )
  {
  return
  const int(15)
  ;
  }
  identifier(c)
  =
  (
  char
  )
  -
  const int(6)
  ;
  if
  (
  identifier(uint_to_char)
  (
  const unsigned int(2147483898u)
  )
  !=
  identifier(c)
  )
  {
  return
  const int(16)
  ;
  }
  identifier(c)
  =
  (
  char
  )
  -
  const int(2)
  ;
  if
  (
  identifier(double_to_char)
  (
  -
  const double(2.6)
  )
  !=
  identifier(c)
  )
  {
  return
  const int(17)
  ;
  }
  if
  (
  identifier(long_to_schar)
  (
  const long(17592186044416l)
  )
  )
  {
  return
  const int(18)
  ;
  }
  identifier(sc)
  =
  (
  signed
  char
  )
  -
  const int(126)
  ;
  if
  (
  identifier(ulong_to_schar)
  (
  const unsigned long(9224497936761618562ul)
  )
  !=
  identifier(sc)
  )
  {
  return
  const int(19)
  ;
  }
  identifier(uc)
  =
  (
  unsigned
  char
  )
  const int(200)
  ;
  if
  (
  identifier(int_to_uchar)
  (
  -
  const int(1234488)
  )
  !=
  identifier(uc)
  )
  {
  return
  const int(20)
  ;
  }
  if
  (
  identifier(uint_to_uchar)
  (
  const int(4293732808)
  )
  !=
  identifier(uc)
  )
  {
  return
  const int(21)
  ;
  }
  if
  (
  identifier(long_to_uchar)
  (
  -
  const long(36283884951096l)
  )
  !=
  identifier(uc)
  )
  {
  return
  const int(22)
  ;
  }
  if
  (
  identifier(ulong_to_uchar)
  (
  const unsigned long(9224497936761618632ul)
  )
  !=
  identifier(uc)
  )
  {
  return
  const int(23)
  ;
  }
  if
  (
  identifier(double_to_uchar)
  (
  const double(200.99)
  )
  !=
  identifier(uc)
  )
  {
  return
  const int(24)
  ;
  }
  static
  long
  *
  identifier(null_ptr)
  ;
  char
  identifier(zero)
  =
  (
  char
  )
  identifier(null_ptr)
  ;
  if
  (
  identifier(zero)
  )
  {
  return
  const int(25)
  ;
  }
  identifier(c)
  =
  const int(32)
  ;
  int
  *
  identifier(i)
  =
  (
  int
  *
  )
  identifier(c)
  ;
  if
  (
  (
  char
  )
  identifier(i)
  !=
  identifier(c)
  )
  {
  return
  const int(26)
  ;
  }
  if
  (
  (
  char
  )
  const int(300)
  !=
  (
  char
  )
  const int(44)
  )
  {
  return
  const int(27)
  ;
  }
  return
  const int(0)
  ;
  }
